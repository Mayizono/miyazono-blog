{
    "version": "https://jsonfeed.org/version/1",
    "title": "冬樱茶",
    "subtitle": "",
    "icon": "https://github.com/Mayizono/miyazono.github.io/images/favicon.ico",
    "description": "",
    "home_page_url": "https://github.com/Mayizono/miyazono.github.io",
    "items": [
        {
            "id": "https://github.com/Mayizono/miyazono.github.io/big-data/zookeeper/hello-world/",
            "url": "https://github.com/Mayizono/miyazono.github.io/big-data/zookeeper/hello-world/",
            "title": "Hello World",
            "date_published": "2021-08-21T16:32:34.087Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": [
                "大数据",
                "Zookeeper"
            ]
        },
        {
            "id": "https://github.com/Mayizono/miyazono.github.io/big-data/hadoop/hello-world/",
            "url": "https://github.com/Mayizono/miyazono.github.io/big-data/hadoop/hello-world/",
            "title": "Hello World",
            "date_published": "2021-08-21T16:31:11.456Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": [
                "大数据",
                "Hadoop"
            ]
        },
        {
            "id": "https://github.com/Mayizono/miyazono.github.io/big-data/flink/hello-world/",
            "url": "https://github.com/Mayizono/miyazono.github.io/big-data/flink/hello-world/",
            "title": "Hello World",
            "date_published": "2021-08-21T16:12:43.574Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": [
                "大数据",
                "Flink"
            ]
        },
        {
            "id": "https://github.com/Mayizono/miyazono.github.io/big-data/spark/hello-world/",
            "url": "https://github.com/Mayizono/miyazono.github.io/big-data/spark/hello-world/",
            "title": "Hello World",
            "date_published": "2021-08-21T16:12:43.359Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": [
                "大数据",
                "Spark"
            ]
        },
        {
            "id": "https://github.com/Mayizono/miyazono.github.io/Day10-%E7%BB%A7%E6%89%BF/",
            "url": "https://github.com/Mayizono/miyazono.github.io/Day10-%E7%BB%A7%E6%89%BF/",
            "title": "Java基础--继承",
            "date_published": "2021-08-17T13:20:32.601Z",
            "content_html": "<h1 id=\"第一章-继承\"><a class=\"anchor\" href=\"#第一章-继承\">#</a> 第一章 继承</h1>\n<h2 id=\"11-继承的概述\"><a class=\"anchor\" href=\"#11-继承的概述\">#</a> 1.1 继承的概述</h2>\n<p><strong>继承:</strong> 就是子类继承父类的属性和行为，使得子类对象具有与父类相同的属性、相同的行为。</p>\n<h3 id=\"111继承的好处\"><a class=\"anchor\" href=\"#111继承的好处\">#</a> 1.1.1 继承的好处</h3>\n<p>提高代码的复用性。<br />\n提高代码的扩展性。<br />\n类与类之间产生了关系，是学习多态的前提。</p>\n<h2 id=\"12继承的格式\"><a class=\"anchor\" href=\"#12继承的格式\">#</a> 1.2 继承的格式</h2>\n<p>通过 extends 关键字，可以声明一个子类继承另外一个父类，定义格式如下：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> 父类类名 <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> 子类类名 <span class=\"token keyword\">extends</span> 父类类名 <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>继承演示:</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * 定义动物类 Animal，做为父类</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Animal</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 定义 name 属性</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 定义 age 属性</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 定义动物的吃东西方法</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>age <span class=\"token operator\">+</span> <span class=\"token string\">\"岁的\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\"在吃东西\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> * 定义猫类 Cat 继承 动物类 Animal</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Cat</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Animal</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">// 定义一个猫抓老鼠的方法 catchMouse</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">catchMouse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"抓老鼠\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"25\"></td><td><pre> * 定义测试类</pre></td></tr><tr><td data-num=\"26\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExtendDemo01</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">// 创建一个猫类对象 </span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token class-name\">Cat</span> cat <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Cat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token comment\">// 为该猫类对象的 name 属性进行赋值</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        cat<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"Tom\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token comment\">// 为该猫类对象的 age 属性进行赋值 </span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        cat<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token comment\">// 调用该猫的 catchMouse () 方法 </span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        cat<span class=\"token punctuation\">.</span><span class=\"token function\">catchMouse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token comment\">// 调用该猫继承来的 eat () 方法 </span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        cat<span class=\"token punctuation\">.</span><span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>演示结果：<br />\n抓老鼠<br />\n 2 岁的 Tom 在吃东西</p>\n</blockquote>\n<h2 id=\"13-继承的特点一成员变量\"><a class=\"anchor\" href=\"#13-继承的特点一成员变量\">#</a> 1.3 继承的特点一：成员变量</h2>\n<h3 id=\"131私有化private\"><a class=\"anchor\" href=\"#131私有化private\">#</a> 1.3.1 私有化（private）</h3>\n<p>父类中的成员，无论是公有 (public) 还是私有 (private)，均会被子类继承。<br />\n子类虽会继承父类私有 (private) 的成员，但子类不能对继承的私有成员直接进行访问，可通过继承<br />\n的公有方法进行访问。如图所示：</p>\n<p><img data-src=\"https://miyazono-1255488789.cos.ap-shanghai.myqcloud.com/markdown/20210415104325.png\" alt=\"image\" /></p>\n<pre><code>   官方结论:\n       (1)子类可以继承父类所有的属性和行为\n       (2)子类可以继承同包下父类的私有成员\n       (3)子类不可以继承父类的私有成员\n \n   自己总结:\n       子类可以继承父类的私有属性和行为,因为是私有的,子类无法直接方法,但可以通过set和get进行方法\n</code></pre>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/** 定义动物类 Animal，做为父类 */</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Animal</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 定义 name 属性 </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 定义 age 属性 </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 定义动物的吃东西方法 </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>age <span class=\"token operator\">+</span> <span class=\"token string\">\"岁的\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\"在吃东西\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">/** 定义猫类 Cat 继承 动物类 Animal */</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Cat</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Animal</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">// 定义一个猫抓老鼠的方法</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    catchMouse <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">catchMouse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"抓老鼠\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">/** 定义测试类 */</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExtendDemo01</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\">// 创建一个猫类对象 </span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token class-name\">Cat</span> cat <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Cat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token comment\">// 为该猫类对象的 name 属性进行赋值 </span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\">//t.name = \"Tom\";// 编译报错 </span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\">// 为该猫类对象的 age 属性进行赋值 </span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        t<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">// 调用该猫的 catchMouse () 方法 </span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        t<span class=\"token punctuation\">.</span><span class=\"token function\">catchMouse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\">// 调用该猫继承来的 eat () 方法 </span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        t<span class=\"token punctuation\">.</span><span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"132成员变量重名问题\"><a class=\"anchor\" href=\"#132成员变量重名问题\">#</a> 1.3.2 成员变量重名问题</h3>\n",
            "tags": []
        },
        {
            "id": "https://github.com/Mayizono/miyazono.github.io/big-data/kafka/Kafka%E6%80%BB%E7%BB%93/",
            "url": "https://github.com/Mayizono/miyazono.github.io/big-data/kafka/Kafka%E6%80%BB%E7%BB%93/",
            "title": "Kafka学习",
            "date_published": "2020-08-11T16:00:00.000Z",
            "content_html": "<h1 id=\"kafka总结\"><a class=\"anchor\" href=\"#kafka总结\">#</a> Kafka 总结</h1>\n<hr />\n<h2 id=\"一-kafka概述\"><a class=\"anchor\" href=\"#一-kafka概述\">#</a> 一、kafka 概述</h2>\n<h3 id=\"11-kafka定义\"><a class=\"anchor\" href=\"#11-kafka定义\">#</a> 1.1 kafka 定义</h3>\n<blockquote>\n<p>Kafka 是一个分布式的基于<strong>发布 / 订阅</strong>模式的<strong>消息队列，<strong>主要应用于大数据</strong>实时</strong>处理领域。</p>\n<p>订阅式模式：一对多的关系，一个生产者，数据存储在消息队列中，多个消费者均可从这个消息对列中获取数据，<strong>消费者消费数据之后不会清除消息。</strong></p>\n</blockquote>\n<h3 id=\"12-框架说明\"><a class=\"anchor\" href=\"#12-框架说明\">#</a> 1.2 框架说明</h3>\n<blockquote>\n<p>一般都是从命令行和 API 两个方面进行讲解。</p>\n<p>数据处理框架需要从数据的安全性以及效率两个方面深入了解。</p>\n</blockquote>\n<h3 id=\"13-kafka涉及的关键词\"><a class=\"anchor\" href=\"#13-kafka涉及的关键词\">#</a> 1.3 Kafka 涉及的关键词</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1.</span> producer: 消息的生产者，即为向kafka broker发消息<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">2.</span> broker ： kafka集群的节点；</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">3.</span> topic : 队列（话题），生产者和消费者面向的都是一个topic；</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">4.</span> message：消息，队列中的一条消息；</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">5.</span> <span class=\"token keyword\">partition</span>: 分区，为方便扩展和提高吞吐量，将一个topic分为了多个<span class=\"token keyword\">partition</span>；</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">6.</span> <span class=\"token keyword\">index</span> ： 消息数据在log文件中的索引；</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">7.</span> log ：消息的具体数据；</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">8.</span> timeindex： 时间索引，代表发送的数据时间索引；</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">9.</span> <span class=\"token keyword\">offset</span> ： 消息的偏移量，每一条消息都对应一个<span class=\"token keyword\">offset</span>；</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">10.</span> segment : 一个分片数据；</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">11.</span> leader ：每个分区多个副本的“主”，生产者发送数据的对象，以及消费者消费数据的对象都是leader；</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">12.</span> follower : 每个分区多个副本中的“从”，实时从leader中同步数据，保持和leader数据的同步。leader发生故障时，某个follower会成为新的leader</pre></td></tr></table></figure><h2 id=\"二-kafka安装\"><a class=\"anchor\" href=\"#二-kafka安装\">#</a> 二、Kafka 安装</h2>\n<h3 id=\"21-集群部署\"><a class=\"anchor\" href=\"#21-集群部署\">#</a> 2.1 集群部署</h3>\n<h4 id=\"221-解压安装包\"><a class=\"anchor\" href=\"#221-解压安装包\">#</a> 2.2.1  解压安装包</h4>\n<p>在 /opt/software 目录下</p>\n<pre><code class=\"language-sq1\">tar -zxvf kafka_2.11-2.4.1.tgz -C /opt/module/\n</code></pre>\n<h4 id=\"222-修改解压后的文件名称\"><a class=\"anchor\" href=\"#222-修改解压后的文件名称\">#</a> 2.2.2  修改解压后的文件名称</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mv kafka_2<span class=\"token punctuation\">.</span><span class=\"token number\">11</span><span class=\"token operator\">-</span><span class=\"token number\">2.4</span><span class=\"token number\">.1</span><span class=\"token operator\">/</span> kafka</pre></td></tr></table></figure><h4 id=\"223-创建logs文件夹\"><a class=\"anchor\" href=\"#223-创建logs文件夹\">#</a> 2.2.3 创建 logs 文件夹</h4>\n<p>在 /opt/module/kafka 目录下</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mkdir logs</pre></td></tr></table></figure><h4 id=\"224-修改配置文件\"><a class=\"anchor\" href=\"#224-修改配置文件\">#</a> 2.2.4 修改配置文件</h4>\n<p>/opt/module/kafk 路径下</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>vim config<span class=\"token operator\">/</span>server<span class=\"token punctuation\">.</span>properties</pre></td></tr></table></figure><p>修改如下三个参数，修改后的值如下：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>broker<span class=\"token punctuation\">.</span>id<span class=\"token operator\">=</span><span class=\"token number\">2</span>；</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>log<span class=\"token punctuation\">.</span>dirs<span class=\"token operator\">=</span><span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>kafka<span class=\"token operator\">/</span>logs</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>zookeeper<span class=\"token punctuation\">.</span><span class=\"token keyword\">connect</span><span class=\"token operator\">=</span>hadoop102:<span class=\"token number\">2181</span><span class=\"token punctuation\">,</span>hadoop103:<span class=\"token number\">2181</span><span class=\"token punctuation\">,</span>hadoop104:<span class=\"token number\">2181</span><span class=\"token operator\">/</span>kafka</pre></td></tr></table></figure><h4 id=\"225-配置环境变量\"><a class=\"anchor\" href=\"#225-配置环境变量\">#</a> 2.2.5 配置环境变量</h4>\n<pre><code class=\"language-Sql\">sudo vim /etc/profile.d/my_env.sh\n</code></pre>\n<p>增加如下配置：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#KAFKA_HOME</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>KAFKA_HOME<span class=\"token operator\">=</span><span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>kafka</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>PATH<span class=\"token operator\">=</span>$PATH:$KAFKA_HOME<span class=\"token operator\">/</span>bin</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>export KAFKA_HOME</pre></td></tr></table></figure><p>生效配置文件：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>source <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>profile</pre></td></tr></table></figure><h4 id=\"226-分发安装包\"><a class=\"anchor\" href=\"#226-分发安装包\">#</a> 2.2.6  分发安装包</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>xsync kafka<span class=\"token operator\">/</span></pre></td></tr></table></figure><p>注意：分发之后记得配置其他机器的环境变量</p>\n<h4 id=\"227-修改其他机器的配置文件\"><a class=\"anchor\" href=\"#227-修改其他机器的配置文件\">#</a> 2.2.7 修改其他机器的配置文件</h4>\n<ul>\n<li>\n<p>/opt/module/kafka/config/server.properties 中的 broker.id=3、broker.id=4</p>\n<p>注：broker.id 不得重复</p>\n</li>\n</ul>\n<h4 id=\"228-启动集群\"><a class=\"anchor\" href=\"#228-启动集群\">#</a> 2.2.8  启动集群</h4>\n<ol>\n<li>\n<p>首先启动 zookeeper 集群和 hadoop 集群</p>\n</li>\n<li>\n<p>依次在 hadoop102、hadoop103、hadoop104 节点上启动 kafka</p>\n</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kafka<span class=\"token operator\">-</span>server<span class=\"token operator\">-</span><span class=\"token keyword\">start</span><span class=\"token punctuation\">.</span>sh <span class=\"token operator\">-</span>daemon $KAFKA_HOME<span class=\"token operator\">/</span>config<span class=\"token operator\">/</span>server<span class=\"token punctuation\">.</span>properties</pre></td></tr></table></figure><ul>\n<li>-daemon 属于后台启动，没有 - daemon 则为前台启动</li>\n</ul>\n<h4 id=\"229-关闭集群\"><a class=\"anchor\" href=\"#229-关闭集群\">#</a> 2.2.9 关闭集群</h4>\n<pre><code class=\"language-Sql、\">kafka-server-stop.sh\n</code></pre>\n<h4 id=\"2210-kafka群起群停脚本\"><a class=\"anchor\" href=\"#2210-kafka群起群停脚本\">#</a> 2.2.10 kafka 群起群停脚本</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#！bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> $<span class=\"token comment\"># -lt 1 ]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   echo <span class=\"token string\">\"No Args Input Error\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">exit</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>fi</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">case</span> $<span class=\"token number\">1</span> <span class=\"token operator\">in</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token string\">\"start\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token operator\">in</span> <span class=\"token punctuation\">`</span>cat <span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>hadoop<span class=\"token operator\">-</span><span class=\"token number\">3.1</span><span class=\"token number\">.3</span><span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>hadoop<span class=\"token operator\">/</span>workers<span class=\"token punctuation\">`</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>echo <span class=\"token string\">\"==========start $i kafka==========\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>ssh $i <span class=\"token string\">'$KAFKA_HOME/bin/kafka-server-start.sh -daemon /opt/module/kafka/config/server.properties'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>done</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token string\">\"stop\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token operator\">in</span> <span class=\"token punctuation\">`</span>cat <span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>hadoop<span class=\"token operator\">-</span><span class=\"token number\">3.1</span><span class=\"token number\">.3</span><span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>hadoop<span class=\"token operator\">/</span>workers<span class=\"token punctuation\">`</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>echo <span class=\"token string\">\"==========stop $i kafka==========\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>ssh $i <span class=\"token string\">'$KAFKA_HOME/bin/kafka-server-stop.sh'</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>done</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  echo <span class=\"token string\">\"Input Args Error\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>esac</pre></td></tr></table></figure><h3 id=\"22-kafka命令操作\"><a class=\"anchor\" href=\"#22-kafka命令操作\">#</a> 2.2 Kafka 命令操作</h3>\n<h4 id=\"221-查看当前服务器中的所有topic\"><a class=\"anchor\" href=\"#221-查看当前服务器中的所有topic\">#</a> 2.2.1 查看当前服务器中的所有 topic</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kafka<span class=\"token operator\">-</span>topics<span class=\"token punctuation\">.</span>sh  <span class=\"token comment\">--bootstrap-server hadoop102:9092 --list</span></pre></td></tr></table></figure><p>选项说明：</p>\n<ul>\n<li>--list ：查看 kafka 所有的 topic</li>\n<li>--bootstrap-server : 连接 kafka 集群</li>\n<li>--hadoop102:9092：hadoop102 是指连接 kafka 任意一台机器，9092：kafka 内部通信的端口</li>\n</ul>\n<h4 id=\"222-创建topic\"><a class=\"anchor\" href=\"#222-创建topic\">#</a> 2.2.2  创建 topic</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kafka<span class=\"token operator\">-</span>topics<span class=\"token punctuation\">.</span>sh  <span class=\"token comment\">--bootstrap-server hadoop102:9092 --create --topic first --partitions 2 --replication-factor 2</span></pre></td></tr></table></figure><p>选项说明：</p>\n<ul>\n<li>--topic  : 定义 topic 名字</li>\n<li>--partitions  : 定义分区数</li>\n<li>--replication-factor : 定义副本数</li>\n</ul>\n<h4 id=\"223-查看某个topic的详情\"><a class=\"anchor\" href=\"#223-查看某个topic的详情\">#</a> 2.2.3 查看某个 Topic 的详情</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kafka<span class=\"token operator\">-</span>topics<span class=\"token punctuation\">.</span>sh <span class=\"token comment\">--bootstrap-server hadoop102:9092 --describe --topic first</span></pre></td></tr></table></figure><p>选项说明：</p>\n<ul>\n<li>--topic first ： 查看指定的话题，如果不加此选项，则表示查看所有的话题</li>\n</ul>\n<h4 id=\"224-修改分区数\"><a class=\"anchor\" href=\"#224-修改分区数\">#</a> 2.2.4  修改分区数</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kafka<span class=\"token operator\">-</span>topics<span class=\"token punctuation\">.</span>sh <span class=\"token comment\">--bootstrap-server hadoop102:9092 --alter --topic first --partitions 6</span></pre></td></tr></table></figure><p>说明：</p>\n<ul>\n<li>-- 分区数只能增加不能减少</li>\n<li>分区内部消息有序，分区之间消息无序</li>\n</ul>\n<h4 id=\"225-发送消息\"><a class=\"anchor\" href=\"#225-发送消息\">#</a> 2.2.5 发送消息</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kafka<span class=\"token operator\">-</span>console<span class=\"token operator\">-</span>producer<span class=\"token punctuation\">.</span>sh <span class=\"token comment\">--broker-list  hadoop102:9092,hadoop103:9092,hadoop104:9092 --topic first</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">></span>hello world</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">></span>atguigu  atguigu</pre></td></tr></table></figure><p>选项说明：</p>\n<ul>\n<li>hadoop102:9092,hadoop103:9092,hadoop104:9092 : kafka 的集群中的 broker，其实写一个也是可以的，写 3 个的目的只是避免当连接的 kafka 集群 broker 故障时连不上 kafka 集群的情况。</li>\n</ul>\n<h4 id=\"226-消费消息\"><a class=\"anchor\" href=\"#226-消费消息\">#</a> 2.2.6  消费消息</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kafka<span class=\"token operator\">-</span>console<span class=\"token operator\">-</span>consumer<span class=\"token punctuation\">.</span>sh <span class=\"token comment\">--bootstrap-server hadoop102:9092 --from-beginning --topic first</span></pre></td></tr></table></figure><p>选项说明：</p>\n<ul>\n<li>\n<p>--from-beginning ：</p>\n<p>加上：会把 topic 中以往所有的数据都读取出来</p>\n<p>不加：此时只会消费最新的数据，原来 topic 中的数据不会被消费</p>\n</li>\n</ul>\n<h4 id=\"227-删除topic\"><a class=\"anchor\" href=\"#227-删除topic\">#</a> 2.2.7  删除 topic</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kafka<span class=\"token operator\">-</span>topics<span class=\"token punctuation\">.</span>sh <span class=\"token comment\">--bootstrap-server hadoop102:9820 --delete --topic first</span></pre></td></tr></table></figure><h2 id=\"三-kafka深入流程\"><a class=\"anchor\" href=\"#三-kafka深入流程\">#</a> 三、 Kafka 深入流程</h2>\n<p>说明：此框架步步引导，采取提出问题解决问题的方式阐述。</p>\n<h3 id=\"31-kafka工作流程及文件存储机制\"><a class=\"anchor\" href=\"#31-kafka工作流程及文件存储机制\">#</a> 3.1 Kafka 工作流程及文件存储机制</h3>\n<p><img data-src=\"https://miyazono-1255488789.cos.ap-shanghai.myqcloud.com/markdown/20210822155602.png\" alt=\"图2\" /></p>\n<ol>\n<li>kafka 以 topic（话题）为单位，每一个话题分为多个区（创建话题的时候指定分区的个数），每个分区中存储的数据是不一样的，同时每个分区的数据在其他分区也会创建副本。</li>\n<li>不同的分区分布在 kafka 集群不同的机器（broker，代理人）上面；</li>\n<li>消息的生产和消费均是分区为单位；</li>\n<li>分区内的数据是有序的，分区之间的顺序是无序的；</li>\n<li>offset 指消息的偏移量；</li>\n<li>每个分区都是一个文件夹，文件中包含 index（数据在 log 中的索引）、log（真实的数据）、timeindex (数据发送的时间索引) ，时间索引和 index 索引均是用来提高查询数据效率；</li>\n<li>当产生新的数据以后会向 log 文件中进行追加，同时 index 和 timeindex 也会增加；</li>\n<li>Kafka 采取了<strong>分片</strong>和<strong>索引</strong>机制。</li>\n<li>topic 是逻辑上的概念，而 partition 是物理上的概念，每个 partition 对应于一个 log 文件，该 log 文件中存储的就是 producer 生产的数据。Producer 生产的数据会被不断追加到该 log 文件末端，且每条数据都有自己的 offset。消费者组中的每个消费者，都会实时记录自己消费到了哪个 offset，以便出错恢复时，从上次的位置继续消费</li>\n</ol>\n<p><img data-src=\"https://miyazono-1255488789.cos.ap-shanghai.myqcloud.com/markdown/20210822155644.png\" alt=\"图1\" /></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 灵魂拷问 1：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>产生的数据一直向同一个log中进行追加，会有什么问题呢？</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">-- 答案：</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>log中的数据会越来越大，查询和读取效率会变慢。</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">-- 解决方式：</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>数据达到一定程度以后（默认值为<span class=\"token number\">1</span>G：log<span class=\"token punctuation\">.</span>segment<span class=\"token punctuation\">.</span>bytes <span class=\"token operator\">=</span> <span class=\"token number\">1</span>G），log会进行数据切分，生成多个segment切分文件。</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>切分后的文件依然包含<span class=\"token keyword\">index</span>、log、timeindex 。所以三个文件是作为一个整体的。 <span class=\"token comment\">-- 切分机制</span></pre></td></tr></table></figure><p><img data-src=\"https://miyazono-1255488789.cos.ap-shanghai.myqcloud.com/markdown/20210822155702.png\" alt=\"image-20200714205920775\" /></p>\n<p><img data-src=\"https://miyazono-1255488789.cos.ap-shanghai.myqcloud.com/markdown/20210822155724.png\" alt=\"image-20200714210619003\" /></p>\n<blockquote>\n<p>切分的文件位于同一个文件夹下，该文件夹的命名规则为：<mark>topic 名称 + 分区序号</mark>。</p>\n<p>例如，first 这个 topic 有三个分区，则其对应的文件夹为 first-0,first-1,first-2</p>\n</blockquote>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 灵魂拷问 2：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>现在假如有两个切分的文件，当有一个消费者需要消费一条消息（假如是 <span class=\"token keyword\">offset</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span>），怎么知道这个消息在哪个切分文件中，以及真实数据如何查询？</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">-- 答案：</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">1</span>）log和<span class=\"token keyword\">index</span>文件名说明： <span class=\"token comment\">-- 牢记 log、index、timeindex 是一个整体</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">index</span>：<span class=\"token number\">00000000000000000000.</span><span class=\"token keyword\">index</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>log：<span class=\"token number\">00000000000000000000.</span>log</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>前面的数字<span class=\"token number\">00000000000000000000</span>：代表此log文件中第一条消息的<span class=\"token keyword\">offset</span>。</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token string\">'.index文件存储大量的索引信息，“.log”文件存储大量的数据，索引文件中的元数据指向对应数据文件中message的物理偏移地址'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">2</span>） 查询的方式：</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>根据消费消息的<span class=\"token keyword\">offset</span>值 <span class=\"token comment\">--> 找到指定的 index 文件 --> 匹配此条消息在 log 文件中数据的偏移量（即该数据在 log 文件中起始位置）--> 找到待消费的数据</span></pre></td></tr></table></figure><figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 灵魂拷问 3：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>为什么kafka要采取向一个log文件中追加数据呢？</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">-- 答案：</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">1</span>）减少IO；</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">2</span>）消费数据是连续进行消费，连续读取数据的效率高。</pre></td></tr></table></figure><h3 id=\"32-kafka之生产者producer\"><a class=\"anchor\" href=\"#32-kafka之生产者producer\">#</a> 3.2 Kafka 之生产者 producer</h3>\n<h4 id=\"321-分区策略\"><a class=\"anchor\" href=\"#321-分区策略\">#</a> 3.2.1 分区策略</h4>\n<ol>\n<li>首先 producer 发送的数据会被封装成 ProducerRecord 对象，根据对象的参数，分区情况如下：\n<ul>\n<li>\n<p>情况 1 ：指定了 partition；</p>\n</li>\n<li>\n<p>情况 2 ：未指定 partition，封装 key，则按照 key 的 hashcode % 分区数量 得出在哪个分区；</p>\n</li>\n<li>\n<p>情况 3：未指定 partition，也未封装 key 处理方式 :</p>\n<p>参数 1：producer 发送的数据量：batch.size，默认值为 16Kb；</p>\n<p>条件 2：<span class=\"exturl\" data-url=\"aHR0cDovL2xpbmdlci5tcw==\">linger.ms</span>：两条数据发送的间隔时间 t ，默认值为 0s；</p>\n<p>当发送的数据量 &lt; batch.size 并且 发送的数据时间间隔  &lt; t   时，所有的数据在一个分区；</p>\n<p>当发送的数据量 &gt; batch.size 或者 发送的数据时间间隔  &gt;  t 时，则数据会进入下一个分区；</p>\n<p>分区与分区之间采取轮询的方式。</p>\n<p><img data-src=\"https://miyazono-1255488789.cos.ap-shanghai.myqcloud.com/markdown/20210822155751.png\" alt=\"图4\" /></p>\n<p><img data-src=\"https://miyazono-1255488789.cos.ap-shanghai.myqcloud.com/markdown/20210822155800.png\" alt=\"图3\" /></p>\n</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"322-数据可靠性保证\"><a class=\"anchor\" href=\"#322-数据可靠性保证\">#</a> 3.2.2 数据可靠性保证</h4>\n<p>数据传输流程：</p>\n<p>producer -----&gt; server（kafka） ---------&gt; 消费者</p>\n<ul>\n<li>过程 1：producer -----&gt; server（kafka）</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 灵魂拷问 1： </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>如何保证从producer发送数据server的过程中数据不丢失？</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">-- 答案：</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>server收到数据以后会回执，发送ack（acknowledgement确认收到）给producer，producer收到ack以后，则确定数据传送的过程中没有丢失。</pre></td></tr></table></figure><ul>\n<li>过程 2 ： server 的数据存储过程</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 灵魂拷问 2：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>如何确保数据在server中能够被妥善保管呢？</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">-- 答案：</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>server向producer回执ack的时机：</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>模式<span class=\"token number\">1</span>：leader收到消息以后立即回复ack；</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>模式<span class=\"token number\">2</span>：leader收到消息并存储在本地以后，立即回复ack；</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>模式<span class=\"token number\">3</span>：leader收到消息后，所有follow从leader中拉取数据，当所有的follower完成存储以后，leader向producer回复ack。</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>说明：情况<span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token operator\">/</span><span class=\"token number\">3</span>是通过acks参数进行配置。</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>acks<span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token comment\">-- leader 收到消息以后立即回复 ack</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>acks<span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token comment\">-- leader 收到消息并存储在本地以后，立即回复 ack</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>acks<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>或<span class=\"token keyword\">all</span> <span class=\"token comment\">--leader 收到消息后，所有 follow 从 leader 中拉取数据，当所有的 follower 完成存储以后，leader 向 producer 回复 ack</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">-- 默认情况下是 acks=1；</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">-- 灵魂拷问 3：</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>leader与follower副本数据同步策略是什么呢？</pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">-- 答案</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>两种副本同步策略。</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>第一种：半数以上完成同步，就发送ack</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>第二种：全部完成同步，才发送ack</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token string\">'kafka选择全部完成同步，才发送ack'</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span><span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">-- 灵魂拷问 4：</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>kafka选择第二种副本同步策略会有哪些问题呢？</pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">-- 答案：</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>问题<span class=\"token number\">1</span>：follower同步leader的数据时，当某一个follower迟迟未向leader回复备份成功时，出现阻塞的状态；</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>问题<span class=\"token number\">2</span>：当leader回执给producer的ack丢失时，producer因为没有收到来自leader的ack，则默认数据没有发送成功，会重新向集群发送未收到ack的消息，导致数据的重复。 <span class=\"token comment\">-- 数据的重复指：同一条消息重复发送。</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">-- 那如何解决这两个问题呢？</span></pre></td></tr></table></figure><ul>\n<li>问题 1（数据阻塞）解决方案：</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>规则：leader完成消息的读取和写出操作，follower定时向leader拉取数据。</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">1.</span> leader维护了一个动态的<span class=\"token operator\">in</span><span class=\"token operator\">-</span>sync replicat <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span>ISR<span class=\"token punctuation\">)</span> 同步副本的列表，说明：即使是follower也有可能不在isr列表中。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">2.</span>。只要在isr列表中所有的follower均告知leader副本备份完成以后，则leader向producer回执ack，则不受限于出现故障的follower，因为出现故障，就被移除isr列表中。</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">-- 问题 1：</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>那么什么情况下follower不在isr列表呢？</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">-- 答案：</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>如果follower没有在规定的时间与leader保持同步，则leader会将该follower从isr中踢出，同步最大时间通过replica<span class=\"token punctuation\">.</span>lag<span class=\"token punctuation\">.</span><span class=\"token keyword\">time</span><span class=\"token punctuation\">.</span>max<span class=\"token punctuation\">.</span>ms参数设定。</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">-- 问题 2：</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>那么从isr中踢出的follower怎么重新回到isr中呢？ <span class=\"token comment\">-- 故障处理机制</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">-- 答案：</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>每个消息在follower的log文件中有：</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> 真实数据 :消息的真实数据</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> LEO<span class=\"token punctuation\">(</span>log <span class=\"token keyword\">end</span> <span class=\"token keyword\">offset</span><span class=\"token punctuation\">)</span> : 消息的最后偏移量</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> HW<span class=\"token punctuation\">(</span>High Watermark<span class=\"token punctuation\">)</span> ：ISR列表中follower最小的LEO（偏移量）</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>说明：</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token number\">1</span>）每个follower中的LEO可能是不一样的，因副本同步的快慢有差异；</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token number\">2</span>）leader中log的LEO是最大的，因为数据源源不断的发送过来，它的落盘速度是最快的；</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token number\">3</span>）HW之前的数据对consumer可见；</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token number\">4</span>）HW是一个动态的数据，当leader回执ack一次HW就会更新一次。</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>follower发生故障后会被临时踢出ISR，待该follower恢复后，follower会读取本地磁盘记录的上次的HW，并将log文件高于HW的部分截取掉，从HW开始向leader进行同步。等该follower的LEO大于等于该<span class=\"token keyword\">Partition</span>的HW，即follower追上leader之后，就可以重新加入ISR了。</pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">-- 问题 3：</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>当leader挂掉以后怎么办？</pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">-- 答案：</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token number\">1</span>） 重新选举leader；</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token number\">2</span>） 从isr列表中的follower中选取；</pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token number\">3</span>） 随机选择。</pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token string\">'详细过程'</span>：leader发生故障之后，会从ISR中选出一个新的leader，之后，为保证多个副本之间的数据一致性，其余的follower会先将各自的log文件高于HW的部分截掉，然后从新的leader同步数据。</pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token string\">'注意'</span>：这只能保证副本之间的数据一致性，并不能保证数据不丢失或者不重复</pre></td></tr></table></figure><ul>\n<li>问题 2（数据重复）的解决方案</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 在 0.11 之前的 kafka 版本：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>在消费者端进行去重，在producer传输数据时，对消息增加唯一的全局主键，然后在消费端根据该主键进行去重。 </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>该方式导致消费者组所有的消费者都需要进行去重操作，重复。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">-- 在 0.11 版本之后引进了 Exactly Once （幂等性）来解决数据重复的问题</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token number\">1</span>） Exactly Once （幂等性） ： 做n次和做一次的效果是一样的，就是指Producer不论向Server发送多少次重复数据（重复发送同一条数据），Server端都只会持久化一条，在server端完成去重操作。</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token number\">2</span>） 幂等性实现过程</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   初始化数据时，给消息分配一个pid，发往同一个分区的消息会附带sequence Number<span class=\"token punctuation\">,</span>broker端会将<span class=\"token operator\">&lt;</span>pid<span class=\"token punctuation\">,</span><span class=\"token keyword\">partition</span><span class=\"token punctuation\">,</span>sequence Number<span class=\"token operator\">></span>和消息的真实数据一起存储到log文件中，当具有相同主键的消息提交时，Broker只会持久化一条。</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">-- 何为主键？</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>由<span class=\"token operator\">&lt;</span>pid<span class=\"token punctuation\">,</span><span class=\"token keyword\">partition</span><span class=\"token punctuation\">,</span>sequence Number<span class=\"token operator\">></span>三个参数构成的集合。重复发送的数据，这三个值不会变，数据是否重复与数据的内容无关，而是指为同一条数据多次发送。 <span class=\"token comment\">-- 总结：重发的消息的主键是不会改变的，新发的消息 seqnumber 就会变化。</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>例如：消息A与消息B的数据内容完全一致</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>producer向集群发送消息A，集群收到以后返回的ack丢失，则消息A会被再次发送一次，此时消息A的主键是和第一次发送时相同，则集群认为数据是重复，不会进行存储；</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>producer向集群发送消息B，虽然与消息A的数据相同，但是seqnumber是不同的，所以不是重复的数据，集群会进行数据存储。</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>说明：</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token number\">1</span>） sequence Number ：消息序列号，发往同一<span class=\"token keyword\">Partition</span>的消息会附带Sequence Number，表示该producer向该分区发送的第几次消息；</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\tpid : 生产者的id； </pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>  <span class=\"token keyword\">partition</span> ： 分区号；</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token number\">4</span>） PID重启就会变化，同时不同的<span class=\"token keyword\">Partition</span>也具有不同主键，所以幂等性无法保证跨分区跨会话的Exactly Once；</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token number\">5</span>） 开启幂等性会降低kafka的性能；</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token number\">6</span>） 幂等性的底层原理也还是通过给消息增加全局的唯一主键的方式；</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token number\">7</span>） 开启幂等性参数：<span class=\"token keyword\">enable</span><span class=\"token punctuation\">.</span>idompotence设置为<span class=\"token boolean\">true</span>即可。</pre></td></tr></table></figure><h3 id=\"33-kafka之消费者-consumer\"><a class=\"anchor\" href=\"#33-kafka之消费者-consumer\">#</a> 3.3 Kafka 之消费者 consumer</h3>\n<h4 id=\"331-消费模式\"><a class=\"anchor\" href=\"#331-消费模式\">#</a> 3.3.1 消费模式</h4>\n<p>​\t消费者从 server 中读取数据的方式有两种：pull （拉）和 push（推）</p>\n<ol>\n<li>\n<p>pull  ： consumer 向 server 拉取数据 <strong>【主动】</strong></p>\n<ul>\n<li>优点：消费者按需索取</li>\n<li>缺点：不及时，有可能拉取到了空数据</li>\n</ul>\n</li>\n<li>\n<p>push ：server 向 consumer 推送数据 **【被动】**</p>\n<ul>\n<li>优点：及时</li>\n<li>缺点：推送的速率与消费者消费的数据不一致时，产生背压</li>\n</ul>\n</li>\n<li>\n<p>kafka 默认使用 pull，拉取数据的方式。因为 kafka 是一对多的关系，同一个消费者组内的不同消费者的消费速率不同，所以不好设定推送的速率。</p>\n</li>\n<li>\n<p>当出现拉取的数据为空时，consumer 会等待一段时间之后再拉取数据，这段时长即为 timeout</p>\n</li>\n</ol>\n<h4 id=\"332-分区分配策略\"><a class=\"anchor\" href=\"#332-分区分配策略\">#</a> 3.3.2 分区分配策略</h4>\n<p>​\t三种方式：roundrobin 、 range  、sticky</p>\n<ol>\n<li>\n<p>roundrobin ： 轮询的方式 ，理解为洗牌，一张一张的发，分区一个一个轮询的方式分配给消费者；</p>\n<p>缺点：当有新的消费者加进来时，所有的分区需要重新分配分区，基本上大多数的消费者的消费分区都会发生改变。</p>\n</li>\n<li>\n<p>range：理解斗地主把牌按数量平均分配；</p>\n<p>缺点：订阅的话题过多时，存在分区数量不均等的情况。</p>\n</li>\n<li>\n<p>sticky：是在第一种方式的基础上进行改进，解决新增消费者情况的缺点，此时不再是所有消费者的分区进行重新分配，而是新进的消费者取之前所有消费者最后一次分区的数据进行消费。</p>\n</li>\n</ol>\n<ul>\n<li>当消费者的个数 &gt; 分区的个数时，有些消费者没分配不到数据。</li>\n<li>消费者默认的分区分配策略是 range，但是消费者在消费数据时也可以自定指定策略。</li>\n<li>一个分区只能由一个消费者进行消费。</li>\n</ul>\n<h4 id=\"333-offset的维护\"><a class=\"anchor\" href=\"#333-offset的维护\">#</a> 3.3.3   offset 的维护</h4>\n<p>​       由于 consumer 在消费过程中可能会出现断电宕机等故障，consumer 恢复后，需要从故障前的位置的继续消费，所以 consumer 需要实时记录自己消费到了哪个 offset，以便故障恢复后继续消费。<br />\n​      Kafka 0.9 版本之前，consumer 默认将 offset 保存在 Zookeeper 中，从 0.9 版本开始，consumer 默认将 offset 保存在 Kafka 一个内置的 topic 中，该 topic 为__consumer_offsets。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 问题：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>为什么要将<span class=\"token keyword\">offset</span>从zookeeper中转移到kafka中？</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 回答：</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>zookeeper中维护<span class=\"token keyword\">offset</span>的效率对于Kafka来说，不可控的，Kafka不能通过修改自己的代码来提升zookeeper维护<span class=\"token keyword\">offset</span>的效率，所以将<span class=\"token keyword\">offset</span>的维护迁移到kafka的会话中。</pre></td></tr></table></figure><h3 id=\"34-kafka高效读写数据\"><a class=\"anchor\" href=\"#34-kafka高效读写数据\">#</a> 3.4  Kafka 高效读写数据</h3>\n<h4 id=\"341-顺序写磁盘\"><a class=\"anchor\" href=\"#341-顺序写磁盘\">#</a> 3.4.1 顺序写磁盘</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 问题 1：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>kafka的producer生产的数据最终按照顺序存储到磁盘上，写入到磁盘中数据过程不是很慢吗？</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 回答：</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">1</span>） 多分区存储模式：kafka是采用多分区的存储方式，提高了高并发；</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">2</span>） 顺序写模式：按照顺序写的速度能够减少大量磁头询地址的时间，使写数据速度和网络传输速度相当，所以基本上够用，但是还是比内存数据传输的速度要慢。</pre></td></tr></table></figure><h4 id=\"342-应用pagecache\"><a class=\"anchor\" href=\"#342-应用pagecache\">#</a> 3.4.2 应用 Pagecache</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 1. 说明：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Pagecache<span class=\"token punctuation\">(</span>网页缓存<span class=\"token punctuation\">)</span>：是操作系统实现的一个功能，因为linux系统兼容这个功能，所以kafka能够使用，解决大量随机读写的过程。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">-- 2. 内存：</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>我们常说的内存可以分为两个模块，一是提供给系统的内核使用，此部分对于用户是不可见的，不能被用户使用，二是供用户使用的内存。</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">-- 3. 原理： </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>pagecache是在内核内存中开辟的一个内存空间，producer生产的数据，先会存储在该内存中，待达到一定的数据量以后，再统一进行落盘，当消费者消费的速率和生产者生产的速率相同时，读写的效率是最高的，因为此时生产的数据不需要落盘处理，consumer直接从内存中读取数据。</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">-- 4. 交换区和 pagecache 的区别：</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>交换区：将磁盘当做内存使用；</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>pagecache：将内存当做磁盘使用；</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>恰好是两个相反的过程。</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">-- 5. 假如 pagecache 挂掉了怎么办？内存中的数据不是丢失了吗？</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>首先当发生这个问题时，是不能够完全保证数据一定不丢失，但是由于kafka具有副本策略，所以有一定保证的。</pre></td></tr></table></figure><p>优点：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1</span>） I<span class=\"token operator\">/</span>O Scheduler 会将连续的小块写组装成大块的物理写从而提高性能</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">2</span>） I<span class=\"token operator\">/</span>O Scheduler 会尝试将一些写操作重新按顺序排好，从而减少磁盘头的移动时间</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">3</span>） 充分利用所有空闲内存（非 JVM 内存）。如果使用应用层 Cache（即 JVM 堆内存），会增加 GC 负担</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">4</span>） 读操作可直接在 Page Cache 内进行。如果消费和生产速度相当，甚至不需要通过物理磁盘（直接通过 Page Cache）交换数据</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">5</span>） 如果进程重启，JVM 内的 Cache 会失效，但 Page Cache 仍然可用</pre></td></tr></table></figure><h4 id=\"343-零拷贝技术\"><a class=\"anchor\" href=\"#343-零拷贝技术\">#</a> 3.4.3 零拷贝技术</h4>\n<p><img data-src=\"https://miyazono-1255488789.cos.ap-shanghai.myqcloud.com/markdown/20210822155816.png\" alt=\"图5\" /></p>\n<p>说明：</p>\n<p>内存是分级别的，读写数据时数据先经过内核内存再经过用户内存。</p>\n<p>如果是数据的写出操作，则数据经过内核内存以后就直接往外写出，不需经过用户内存，用户内存只是负责调度的功能，减少了 数据的传输过程，这个过程称为零拷贝。</p>\n<h3 id=\"35-zookeeper在kafka中的作用\"><a class=\"anchor\" href=\"#35-zookeeper在kafka中的作用\">#</a> 3.5  zookeeper 在 kafka 中的作用</h3>\n<ul>\n<li>kafka 是一个去中心化的框架，没有主从之分，则需要一个中央控制中心进行调度，类似 ha 集群一样。</li>\n<li>kafka 是依赖于 zookeeper 集群的。</li>\n</ul>\n<p>流程：一个 kafka 集群，多个 broker，一个 zk 集群</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 步骤：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span>） 首先所有的broker会竞选一个controller（随机竞选，谁厉害谁上），负责管理集群broker的上下线，所有topic的分区副本分配和leader选举等工作；</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span>） 所有的broker将自己的id信息注册到zk集群的节点上；</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">3</span>） controller监控zk的这个信息；</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">4</span>） controller负责broker的leader选举工作；</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">5</span>） broker将状态信息注册到zk集群上；</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">6</span>） 此时分区的leader故障以后，controller从zk集群中获取isr中的follower信息，负责从isr中follower选举出一个新的leader；</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">7</span>） controller更新zk集群上broker的状态信息。</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">-- 假如故障的 leader 恰好也是 controller 怎么办？</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>先从现存的follower中重新选举controller，再执行<span class=\"token number\">1</span><span class=\"token operator\">-</span><span class=\"token number\">5</span>步。</pre></td></tr></table></figure><p><img data-src=\"https://miyazono-1255488789.cos.ap-shanghai.myqcloud.com/markdown/20210822155820.png\" alt=\"图6\" /></p>\n<h3 id=\"36-kafka事务\"><a class=\"anchor\" href=\"#36-kafka事务\">#</a> 3.6 Kafka 事务</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 问题：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>事务用来解决什么问题？</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 回答：</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>kafka使用Exactly Once解决producer端生产数据重复的问题存在什么 问题？</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>问题<span class=\"token number\">1</span>：不能跨分区；</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>问题<span class=\"token number\">2</span>：producer重启时，pid会发生变化。</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>则事务就是来解决上面问题的，事务可以保证Kafka在Exactly Once语义的基础上，生产和消费可以跨分区和会话，要么全部成功，要么全部失败。</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">-- 那具体是怎么做的呢？</span></pre></td></tr></table></figure><h4 id=\"361-producer事务\"><a class=\"anchor\" href=\"#361-producer事务\">#</a> 3.6.1 producer 事务</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 解决 producer 重启问题：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> 引进全局唯一的<span class=\"token keyword\">Transaction</span> ID，将producer的pid与<span class=\"token keyword\">Transaction</span> ID进行绑定。当重启producer时，可以通过正在进行的<span class=\"token keyword\">Transaction</span> ID获得原来的PID<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> 为了管理<span class=\"token keyword\">Transaction</span>，Kafka引入了一个新的组件<span class=\"token keyword\">Transaction</span> Coordinator。Producer就是通过和<span class=\"token keyword\">Transaction</span> Coordinator交互获得<span class=\"token keyword\">Transaction</span> ID对应的任务状态。<span class=\"token keyword\">Transaction</span> Coordinator还负责将所有事务写入Kafka的一个内部Topic，这样即使整个服务重启，由于事务状态得到保存，进行中的事务状态可以得到恢复，从而继续进行。</pre></td></tr></table></figure><h4 id=\"362-consumer事务精准一次性消费\"><a class=\"anchor\" href=\"#362-consumer事务精准一次性消费\">#</a> 3.6.2  Consumer 事务（精准一次性消费）</h4>\n<pre><code>kafak对consumer事务的保证是非常弱的，尤其无法保证Commit的信息被精确消费。这是由于Consumer可以通过offset访问任意信息，而且不同的Segment File生命周期不同，同一事务的消息可能会出现重启后被删除的情况\n</code></pre>\n<h2 id=\"四-kafka-api\"><a class=\"anchor\" href=\"#四-kafka-api\">#</a> 四、 Kafka API</h2>\n<p>温馨提示</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>api的步骤：</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>第一步： new 对象<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>第二步： 具体的操作<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>第三步： 关闭资源。</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">-- 不知道要写哪些参数？不知道参数的意义？不知道参数取值？怎么办？</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>请认准kafka官网：https:<span class=\"token comment\">//kafka.apache.org/documentation/</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>producer API ： 找Producer Configs</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>consumer API：  找Consumer Configs</pre></td></tr></table></figure><h3 id=\"41-producer-api\"><a class=\"anchor\" href=\"#41-producer-api\">#</a> 4.1 Producer API</h3>\n<h4 id=\"411-消息发送流程\"><a class=\"anchor\" href=\"#411-消息发送流程\">#</a> 4.1.1 消息发送流程</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 问题： </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Kafka的Producer发送消息采用的是异步发送的方式，这种方式优点和缺点是什么呢？</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 回答：</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>优点：高效率，生产者只要一直生产数据就可以，不需要等到ack回执后再进行生产数据；</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>缺点：不能实时知道数据是否发送成功，不过有ack机制、幂等性机制和producer事务（保证数据的准确性）。</pre></td></tr></table></figure><figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 发送数据的流程：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token string\">'两线程一共享变量'</span>：</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">1.</span> main线程：将消息发送给RecordAccumulator</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">2.</span> Sender线程：Sender线程不断从RecordAccumulator中拉取消息发送到Kafka broker</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">3.</span> 线程共享变量——RecordAccumulator：数据临时存储器。</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token string\">'步骤'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>第一步：生产者首先将数据包装成ProducerRecord</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>第二步：main线程中有一个send方法，producer将ProducerRecord发送给interceptors<span class=\"token string\">'拦截器'</span>处理；</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>第三步：interceptors处理好后将数据传递给<span class=\"token string\">'序列化器'</span>，将数据序列化； <span class=\"token comment\">-- 在 producer 端序列化</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>第四步：将序列化好的数据传递给<span class=\"token string\">'分区器'</span>，对数据进行分区； <span class=\"token comment\">-- 在 producer 端序列化</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>第五步：将数据传递到内存的数据缓存区，在这里面，话题有多少个分区，在缓存区里面就有多少个分区，一一对应，对应的分区数据就会去到对应的缓存区的分区中； <span class=\"token comment\">-- 此时的数据是已经分好区了，同时也是已经序列化，此时 producer 就不再管这里的数据了；</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>第六步：Sender线程就将数据发送给topic中的分区中。 </pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">-- 此时的数据，Sender 线程是怎么向 topic 中发的呢？</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>batch<span class=\"token punctuation\">.</span>size：只有数据积累到batch<span class=\"token punctuation\">.</span>size之后，sender才会发送数据。</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>linger<span class=\"token punctuation\">.</span>ms：如果数据迟迟未达到batch<span class=\"token punctuation\">.</span>size，sender等待linger<span class=\"token punctuation\">.</span><span class=\"token keyword\">time</span>之后就会发送数据。</pre></td></tr></table></figure><p><img data-src=\"https://miyazono-1255488789.cos.ap-shanghai.myqcloud.com/markdown/20210822155824.png\" alt=\"图7\" /></p>\n<h4 id=\"412-异步发送api\"><a class=\"anchor\" href=\"#412-异步发送api\">#</a> 4.1.2 异步发送 API</h4>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">kafkaproducer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>clients<span class=\"token punctuation\">.</span>producer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Callback</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>clients<span class=\"token punctuation\">.</span>producer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KafkaProducer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>clients<span class=\"token punctuation\">.</span>producer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ProducerRecord</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>clients<span class=\"token punctuation\">.</span>producer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RecordMetadata</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Properties</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ExecutionException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Future</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * @author lianzhipeng</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> * @Description</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> * @create 2020-05-08 14:58</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Producer</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ExecutionException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\">//1.new 对象</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">Properties</span> properties <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Properties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        properties<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key.serializer\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token string\">\"org.apache.kafka.common.serialization.StringSerializer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        properties<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value.serializer\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token string\">\"org.apache.kafka.common.serialization.StringSerializer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        properties<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"acks\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"all\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        properties<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bootstrap.servers\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hadoop102:9092\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token class-name\">KafkaProducer</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> producer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">KafkaProducer</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>properties<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token comment\">//2. 具体的操作</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token class-name\">Future</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">RecordMetadata</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> producer<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ProducerRecord</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                    <span class=\"token string\">\"first\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                    <span class=\"token string\">\"Message\"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                    <span class=\"token string\">\"这是第\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\"条信息\"</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Callback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 回调函数，当 producer 发送的数据完成以后，返回告诉 producer 数据发送成功</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onCompletion</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RecordMetadata</span> metadata<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Exception</span> exception<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                    <span class=\"token keyword\">int</span> partition <span class=\"token operator\">=</span> metadata<span class=\"token punctuation\">.</span><span class=\"token function\">partition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                    <span class=\"token class-name\">String</span> topic <span class=\"token operator\">=</span> metadata<span class=\"token punctuation\">.</span><span class=\"token function\">topic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                    <span class=\"token keyword\">long</span> offset <span class=\"token operator\">=</span> metadata<span class=\"token punctuation\">.</span><span class=\"token function\">offset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                            topic <span class=\"token operator\">+</span> <span class=\"token string\">\"话题\"</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                                    <span class=\"token operator\">+</span> partition <span class=\"token operator\">+</span> <span class=\"token string\">\"分区\"</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                                    <span class=\"token operator\">+</span> offset <span class=\"token operator\">+</span> <span class=\"token string\">\"消息发送成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>           </pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            如下一行代码产生同步回调和异同回调两种方式：</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            同步回调：加了此行代码，生产者收到 ack 以后再发第二条消息；类似打电话</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            异步回调：未加此行代码，生成者只要一直发送消息既可。类似发短信</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            */</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token class-name\">RecordMetadata</span> recordMetadata <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\"条消息发送结束\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token comment\">//3. 关闭资源，资源关闭的时候会调用回调函数</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        producer<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"42-consumer-api\"><a class=\"anchor\" href=\"#42-consumer-api\">#</a> 4.2  Consumer API</h3>\n<h4 id=\"421-数据漏消费和重复消费\"><a class=\"anchor\" href=\"#421-数据漏消费和重复消费\">#</a> 4.2.1 数据漏消费和重复消费</h4>\n<ol>\n<li>消费者不用担心数据的可靠性问题，因为消费者消费以后的数据是不会从 kafka 集群中删除的。但是消费者要关心两个问题：</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 问题 1 数据漏消费</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>什么时候会出现数据漏消费呢？</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>先提交<span class=\"token keyword\">offset</span>后消费。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>例如：消费者从kafka集群中获取了数据，此数据在消费的过程中出现故障延迟最后宕机，在故障期间<span class=\"token keyword\">offset</span>已经提交至kafka集群，此时实际上数据并没有被使用，但是kafka集群上该消费者消费的数据偏移量已经更新了，重启消费者时，上一条数据不能被消费了，导致数据漏消费。</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">-- 问题 2 数据重复消费</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>什么时候会出现数据库重复消费呢？</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>当数据已经被消费以后，此时返回的<span class=\"token keyword\">offset</span>时消费者出现了故障，则kafka集群中的_consumer_offset会话保存的<span class=\"token keyword\">offset</span>则为上一次的数据，<span class=\"token keyword\">offset</span>没有被更新，当消费者重新启动时，上一条数据则会被重新再消费一次。</pre></td></tr></table></figure><ol start=\"2\">\n<li>谈谈消费者提交 offset 的模式</li>\n</ol>\n<p>消费者每次拉取数据的最大值为：1M，（ 1048576 字节）</p>\n<ul>\n<li>\n<p>模式一：自动提交，默认每 5s 提交一次；</p>\n</li>\n<li>\n<p>模式二：手动提交，两种方式：commitSync（同步提交）、commitAsync（异步提交）；</p>\n</li>\n</ul>\n<p>​        同步和异步的异同点：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 相同点：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>提交本次poll的一批数据最高的偏移量<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 不同点：</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>commitSync（同步提交）：提交<span class=\"token keyword\">offset</span>时，commitSync阻塞当前线程，一直到提交成功，并且会自动失败重试（由不可控因素导致，也会出现提交失败）；</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>commitAsync（异步提交）：则没有失败重试机制，故有可能提交失败。</pre></td></tr></table></figure><h4 id=\"422-几个重要的参数\"><a class=\"anchor\" href=\"#422-几个重要的参数\">#</a> 4.2.2 几个重要的参数</h4>\n<ol>\n<li>自动提交 offset 的时间：默认为 5s</li>\n</ol>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9rYWZrYS5hcGFjaGUub3JnL2RvY3VtZW50YXRpb24vI2F1dG8uY29tbWl0LmludGVydmFsLm1z\">auto.commit.interval.ms</span></p>\n<table>\n<thead>\n<tr>\n<th>Type:</th>\n<th>int</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Default:</td>\n<td>5000</td>\n</tr>\n<tr>\n<td>Valid Values:</td>\n<td>[0,...]</td>\n</tr>\n<tr>\n<td>Importance:</td>\n<td>low</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"2\">\n<li>消费者消费数据的起始位置</li>\n</ol>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9rYWZrYS5hcGFjaGUub3JnL2RvY3VtZW50YXRpb24vI2F1dG8ub2Zmc2V0LnJlc2V0\">auto.offset.reset</span></p>\n<ul>\n<li>earliest: automatically reset the offset to the earliest offset --&gt; 表示消费 topic 所有的数据</li>\n<li>latest: automatically reset the offset to the latest offset  --&gt; 表示只消费最新的数据</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Type:</th>\n<th>string</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Default:</td>\n<td>latest</td>\n</tr>\n<tr>\n<td>Valid Values:</td>\n<td>[latest, earliest, none]</td>\n</tr>\n<tr>\n<td>Importance:</td>\n<td>medium</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"3\">\n<li>一次从一个分区拉取的最大数据量</li>\n</ol>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9rYWZrYS5hcGFjaGUub3JnL2RvY3VtZW50YXRpb24vI21heC5wYXJ0aXRpb24uZmV0Y2guYnl0ZXM=\">max.partition.fetch.bytes</span></p>\n<table>\n<thead>\n<tr>\n<th>Type:</th>\n<th>int</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Default:</td>\n<td>1048576</td>\n</tr>\n<tr>\n<td>Valid Values:</td>\n<td>[0,...]</td>\n</tr>\n<tr>\n<td>Importance:</td>\n<td>high</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"423-代码\"><a class=\"anchor\" href=\"#423-代码\">#</a> 4.2.3 代码</h4>\n<ul>\n<li>\n<h3 id=\"consumer-api\"><a class=\"anchor\" href=\"#consumer-api\">#</a> Consumer API</h3>\n</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">kafkaconsumer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>clients<span class=\"token punctuation\">.</span>consumer<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TopicPartition</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Duration</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collections</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Properties</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @author lianzhipeng</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @Description</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * @create 2020-05-08 21:04</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyConsumer</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\">//1 new 对象</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token class-name\">Properties</span> properties <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Properties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        properties<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key.deserializer\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token string\">\"org.apache.kafka.common.serialization.StringDeserializer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        properties<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value.deserializer\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token string\">\"org.apache.kafka.common.serialization.StringDeserializer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        properties<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bootstrap.servers\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hadoop102:9092\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        properties<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"group.id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"group9\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        properties<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"auto.offset.reset\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"earliest\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token comment\">// 自动提交 offset</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        properties<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"enable.auto.commit\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"false\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token class-name\">KafkaConsumer</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> consumer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">KafkaConsumer</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>properties<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token comment\">//2 操作</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token comment\">// 连接话题</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        consumer<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"first\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token comment\">// 拉取数据</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token class-name\">Duration</span> duration <span class=\"token operator\">=</span> <span class=\"token class-name\">Duration</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofMillis</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token class-name\">ConsumerRecords</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> records <span class=\"token operator\">=</span> consumer<span class=\"token punctuation\">.</span><span class=\"token function\">poll</span><span class=\"token punctuation\">(</span>duration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ConsumerRecord</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">record</span> <span class=\"token operator\">:</span> records<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">record</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token comment\">// 手动同步提交</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\">//            consumer.commitSync();</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token comment\">// 手动异步提交</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            consumer<span class=\"token punctuation\">.</span><span class=\"token function\">commitAsync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">OffsetCommitCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onComplete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TopicPartition</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">OffsetAndMetadata</span><span class=\"token punctuation\">></span></span> offsets<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Exception</span> exception<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                    offsets<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                            <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"分区：\"</span> <span class=\"token operator\">+</span> t <span class=\"token operator\">+</span> <span class=\"token string\">\"\\nOffset：\"</span> <span class=\"token operator\">+</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token comment\">//3 关闭资源</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\">//        consumer.close();</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>异步提交代码：</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 手动异步提交方式，形参里面为回调对象。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            consumer<span class=\"token punctuation\">.</span><span class=\"token function\">commitAsync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">OffsetCommitCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>               回调方式，当消费成功以后调用此方法并进行打印</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onComplete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TopicPartition</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">OffsetAndMetadata</span><span class=\"token punctuation\">></span></span> offsets<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Exception</span> exception<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                    offsets<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                            <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"分区：\"</span> <span class=\"token operator\">+</span> t <span class=\"token operator\">+</span> <span class=\"token string\">\"\\nOffset：\"</span> <span class=\"token operator\">+</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"五-kafka监控kafka-eagle\"><a class=\"anchor\" href=\"#五-kafka监控kafka-eagle\">#</a> 五、Kafka 监控（Kafka Eagle）</h2>\n<ol>\n<li>修改 kafka 启动命令</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>修改kafka<span class=\"token operator\">-</span>server<span class=\"token operator\">-</span><span class=\"token keyword\">start</span><span class=\"token punctuation\">.</span>sh命令中</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 原文：</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"x$KAFKA_HEAP_OPTS\"</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"x\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    export KAFKA_HEAP_OPTS<span class=\"token operator\">=</span><span class=\"token string\">\"-Xmx1G -Xms1G\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>fi</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">-- 改为：</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"x$KAFKA_HEAP_OPTS\"</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"x\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    export KAFKA_HEAP_OPTS<span class=\"token operator\">=</span><span class=\"token string\">\"-server -Xms2G -Xmx2G -XX:PermSize=128m -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:ParallelGCThreads=8 -XX:ConcGCThreads=5 -XX:InitiatingHeapOccupancyPercent=70\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    export JMX_PORT<span class=\"token operator\">=</span><span class=\"token string\">\"9999\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">#export KAFKA_HEAP_OPTS=\"-Xmx1G -Xms1G\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>fi</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">-- 注意：修改之后在启动 Kafka 之前要分发之其他节点</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>上传压缩包 kafka-eagle-bin-1.3.7.tar.gz 到集群 /opt/software 目录</li>\n<li>解压到本地</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>atguigu<span class=\"token variable\">@hadoop102</span> software<span class=\"token punctuation\">]</span>$ tar <span class=\"token operator\">-</span>zxvf kafka<span class=\"token operator\">-</span>eagle<span class=\"token operator\">-</span>bin<span class=\"token operator\">-</span><span class=\"token number\">1.3</span><span class=\"token number\">.7</span><span class=\"token punctuation\">.</span>tar<span class=\"token punctuation\">.</span>gz</pre></td></tr></table></figure><ol start=\"4\">\n<li>进入刚才解压的目录，将 kafka-eagle-web-1.3.7-bin.tar.gz 解压至 opt/module</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>atguigu<span class=\"token variable\">@hadoop102</span> kafka<span class=\"token operator\">-</span>eagle<span class=\"token operator\">-</span>bin<span class=\"token operator\">-</span><span class=\"token number\">1.3</span><span class=\"token number\">.7</span><span class=\"token punctuation\">]</span> $ tar <span class=\"token operator\">-</span>zxvf kafka<span class=\"token operator\">-</span>eagle<span class=\"token operator\">-</span>web<span class=\"token operator\">-</span><span class=\"token number\">1.4</span><span class=\"token number\">.5</span><span class=\"token operator\">-</span>bin<span class=\"token punctuation\">.</span>tar<span class=\"token punctuation\">.</span>gz <span class=\"token operator\">-</span>C <span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span></pre></td></tr></table></figure><ol start=\"5\">\n<li>修改名称</li>\n</ol>\n<pre><code>[atguigu@hadoop102 module]$ mv kafka-eagle-we-1.4.5/   eagle\n</code></pre>\n<ol start=\"6\">\n<li>给启动文件执行权限 /opt/module/eagle/bin</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>atguigu<span class=\"token variable\">@hadoop102</span> bin<span class=\"token punctuation\">]</span>$ chmod <span class=\"token number\">777</span> ke<span class=\"token punctuation\">.</span>sh</pre></td></tr></table></figure><ol start=\"7\">\n<li>修改配置文件 /opt/module/eagle/conf/system-config.properties</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">######################################</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># multi zookeeper&amp;kafka cluster list</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">######################################</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>kafka<span class=\"token punctuation\">.</span>eagle<span class=\"token punctuation\">.</span>zk<span class=\"token punctuation\">.</span>cluster<span class=\"token punctuation\">.</span>alias<span class=\"token operator\">=</span>cluster1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>cluster1<span class=\"token punctuation\">.</span>zk<span class=\"token punctuation\">.</span>list<span class=\"token operator\">=</span>hadoop102:<span class=\"token number\">2181</span><span class=\"token punctuation\">,</span>hadoop103:<span class=\"token number\">2181</span><span class=\"token punctuation\">,</span>hadoop104:<span class=\"token number\">2181</span><span class=\"token operator\">/</span>kafka</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">######################################</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># kafka offset storage</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">######################################</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>cluster1<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>eagle<span class=\"token punctuation\">.</span><span class=\"token keyword\">offset</span><span class=\"token punctuation\">.</span>storage<span class=\"token operator\">=</span>kafka</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">######################################</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># kafka metrics, 30 days by default</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">######################################</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>kafka<span class=\"token punctuation\">.</span>eagle<span class=\"token punctuation\">.</span>metrics<span class=\"token punctuation\">.</span>charts<span class=\"token operator\">=</span><span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>kafka<span class=\"token punctuation\">.</span>eagle<span class=\"token punctuation\">.</span>metrics<span class=\"token punctuation\">.</span>retain<span class=\"token operator\">=</span><span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">######################################</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># kafka sqlite jdbc driver address</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">######################################</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>kafka<span class=\"token punctuation\">.</span>eagle<span class=\"token punctuation\">.</span>driver<span class=\"token operator\">=</span>com<span class=\"token punctuation\">.</span>mysql<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>Driver</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>kafka<span class=\"token punctuation\">.</span>eagle<span class=\"token punctuation\">.</span>url<span class=\"token operator\">=</span>jdbc:mysql:<span class=\"token comment\">//hadoop102:3306/ke?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>kafka<span class=\"token punctuation\">.</span>eagle<span class=\"token punctuation\">.</span>username<span class=\"token operator\">=</span>root</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>kafka<span class=\"token punctuation\">.</span>eagle<span class=\"token punctuation\">.</span>password<span class=\"token operator\">=</span><span class=\"token number\">123456</span></pre></td></tr></table></figure><ol start=\"8\">\n<li>添加环境变量</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>export KE_HOME<span class=\"token operator\">=</span><span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>eagle</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>export PATH<span class=\"token operator\">=</span>$PATH:$KE_HOME<span class=\"token operator\">/</span>bin</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 注意：source /etc/profile</span></pre></td></tr></table></figure><ol start=\"9\">\n<li>启动</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>atguigu<span class=\"token variable\">@hadoop102</span> eagle<span class=\"token punctuation\">]</span>$ bin<span class=\"token operator\">/</span>ke<span class=\"token punctuation\">.</span>sh <span class=\"token keyword\">start</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">*</span> Kafka Eagle Service has started success<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">*</span> Welcome<span class=\"token punctuation\">,</span> Now you can visit <span class=\"token string\">'http://192.168.9.102:8048/ke'</span> <span class=\"token comment\">-- 这个网址就是登入的 eagle 的网址</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">*</span> Account:admin <span class=\"token punctuation\">,</span>Password:<span class=\"token number\">123456</span> <span class=\"token comment\">-- 这是登入的密码</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">*</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">Usage</span><span class=\"token operator\">></span> ke<span class=\"token punctuation\">.</span>sh <span class=\"token punctuation\">[</span><span class=\"token keyword\">start</span><span class=\"token operator\">|</span><span class=\"token keyword\">status</span><span class=\"token operator\">|</span>stop<span class=\"token operator\">|</span>restart<span class=\"token operator\">|</span>stats<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">Usage</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token operator\">*</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">Usage</span><span class=\"token operator\">></span> https:<span class=\"token comment\">//www.kafka-eagle.org/ &lt;/Usage></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">-- 注意：启动之前需要先启动 ZK 以及 KAFKA</span></pre></td></tr></table></figure><ol start=\"10\">\n<li>登录页面查看监控数据</li>\n</ol>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>网址： http:<span class=\"token comment\">//192.168.9.102:8048/ke</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>账号： admin</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>密码： <span class=\"token number\">123456</span></pre></td></tr></table></figure><h2 id=\"六-面试题\"><a class=\"anchor\" href=\"#六-面试题\">#</a> 六、面试题</h2>\n<h3 id=\"61-kafka中的isr-ar代表什么\"><a class=\"anchor\" href=\"#61-kafka中的isr-ar代表什么\">#</a> 6.1  Kafka 中的 ISR、AR 代表什么</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ISR:分区leader维护的一个follower列表，在isr中的follower与leader同步。</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>AR:分区的所有副本。</pre></td></tr></table></figure><h3 id=\"62-kafka中的hw-leo等分别代表什么\"><a class=\"anchor\" href=\"#62-kafka中的hw-leo等分别代表什么\">#</a> 6.2 Kafka 中的 HW、LEO 等分别代表什么</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>LEO: leader维护的isr中所有follower的最后偏移量。</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>HW：所有followerleo最小的值。</pre></td></tr></table></figure><h3 id=\"63-kafka中是怎么体现消息顺序性的\"><a class=\"anchor\" href=\"#63-kafka中是怎么体现消息顺序性的\">#</a> 6.3 Kafka 中是怎么体现消息顺序性的</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>每次生产的数据是在一个上次生产数据的基础上追加，同时存储了消息的<span class=\"token keyword\">offset</span>和数据的<span class=\"token keyword\">index</span>索引，减少了数据存储时的磁头寻址的过程。</pre></td></tr></table></figure><h3 id=\"64-kafka中的分区器-序列化器-拦截器是否了解它们之间的处理顺序是什么\"><a class=\"anchor\" href=\"#64-kafka中的分区器-序列化器-拦截器是否了解它们之间的处理顺序是什么\">#</a> 6.4 Kafka 中的分区器、序列化器、拦截器是否了解？它们之间的处理顺序是什么？</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>处理顺序： 拦截器 <span class=\"token comment\">--> 序列化器 --> 分区器</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>拦截器：对数据进行简单处理，加一些标识。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>序列化：对数据进行序列化，保证数据可用于传输；</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>分区器：给数据加上分区标签，指定数据应该去到哪个kafka集群中的分区。</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>以上三步骤均在producer端就完成了。</pre></td></tr></table></figure><h3 id=\"65-kafka生产者客户端的整体结构是什么样子的使用了几个线程来处理分别是什么\"><a class=\"anchor\" href=\"#65-kafka生产者客户端的整体结构是什么样子的使用了几个线程来处理分别是什么\">#</a> 6.5  Kafka 生产者客户端的整体结构是什么样子的？使用了几个线程来处理？分别是什么？</h3>\n<pre><code>一共2个线程，一个数据缓存区。\n线程\nmain线程：负责对数据进行包装、序列化、分区。\nsender线程：负责将数据从数据缓冲区发送topic话题中。\n\n</code></pre>\n<h3 id=\"66-消费者组中的消费者个数如果超过topic的分区那么就会有消费者消费不到数据这句话是否正确\"><a class=\"anchor\" href=\"#66-消费者组中的消费者个数如果超过topic的分区那么就会有消费者消费不到数据这句话是否正确\">#</a> 6.6 消费者组中的消费者个数如果超过 topic 的分区，那么就会有消费者消费不到数据这句话是否正确</h3>\n<pre><code>是的，正确。\n了解一下分区分配的策略。\n三种方式：roundrobin 、 range  、sticky。\n</code></pre>\n<h3 id=\"67-消费者提交消费位移时提交的是当前消费到的最新消息的offset还是offset1\"><a class=\"anchor\" href=\"#67-消费者提交消费位移时提交的是当前消费到的最新消息的offset还是offset1\">#</a> 6.7 消费者提交消费位移时提交的是当前消费到的最新消息的 offset 还是 offset+1？</h3>\n<pre><code>offset + 1 。\n</code></pre>\n<h3 id=\"68-有哪些情形会造成重复消费\"><a class=\"anchor\" href=\"#68-有哪些情形会造成重复消费\">#</a> 6.8 有哪些情形会造成重复消费？</h3>\n<pre><code>先消费后提交offset。\n</code></pre>\n<h3 id=\"69-那些情景会造成消息漏消费\"><a class=\"anchor\" href=\"#69-那些情景会造成消息漏消费\">#</a> 6.9 那些情景会造成消息漏消费？</h3>\n<pre><code>先提交offset后消费。\n</code></pre>\n<h3 id=\"610-当你使用kafka-topicssh创建删除了一个topic之后kafka背后会执行什么逻辑\"><a class=\"anchor\" href=\"#610-当你使用kafka-topicssh创建删除了一个topic之后kafka背后会执行什么逻辑\">#</a> 6.10 当你使用 kafka-topics.sh 创建（删除）了一个 topic 之后，Kafka 背后会执行什么逻辑？</h3>\n<pre><code>了解producer发送数据的过程。\n</code></pre>\n<h3 id=\"611-topic的分区数可不可以增加如果可以怎么增加如果不可以那又是为什么\"><a class=\"anchor\" href=\"#611-topic的分区数可不可以增加如果可以怎么增加如果不可以那又是为什么\">#</a> 6.11 topic 的分区数可不可以增加？如果可以怎么增加？如果不可以，那又是为什么？</h3>\n<pre><code>可以增加。\n</code></pre>\n<h3 id=\"612-topic的分区数可不可以减少如果可以怎么减少如果不可以那又是为什么\"><a class=\"anchor\" href=\"#612-topic的分区数可不可以减少如果可以怎么减少如果不可以那又是为什么\">#</a> 6.12 topic 的分区数可不可以减少？如果可以怎么减少？如果不可以，那又是为什么？</h3>\n<pre><code>不能减少，因为原分区中的数据没有地方去。\n</code></pre>\n<h3 id=\"613-kafka有内部的topic吗如果有是什么有什么作用\"><a class=\"anchor\" href=\"#613-kafka有内部的topic吗如果有是什么有什么作用\">#</a> 6.13 Kafka 有内部的 topic 吗？如果有是什么？有什么作用？</h3>\n<pre><code>\n会话：_consumer_offset，保存consumer消费的偏移量。\n</code></pre>\n<h3 id=\"614-kafka分区分配的概念\"><a class=\"anchor\" href=\"#614-kafka分区分配的概念\">#</a> 6.14 Kafka 分区分配的概念？</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>一共有三种分区分配的策略。</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>三种方式：</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">1</span>）roundrobin ： 轮询分配。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">2</span>）range ： 平均分配。</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">3</span>）sticky ： 轮询分配 <span class=\"token operator\">+</span> 解决新增消费者的优化。</pre></td></tr></table></figure><h3 id=\"615-简述kafka的日志目录结构\"><a class=\"anchor\" href=\"#615-简述kafka的日志目录结构\">#</a> 6.15 简述 Kafka 的日志目录结构？</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>一共有<span class=\"token number\">3</span>个文件</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span>）log文件：记录真实数据，内部包含了真实数据 <span class=\"token operator\">+</span> hw <span class=\"token operator\">+</span> leo。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span>）<span class=\"token keyword\">index</span>文件 ： 存储消息的偏移量。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> timeindex文件 ： 存储下消息的时间偏移量。</pre></td></tr></table></figure><h3 id=\"616-如果我指定了一个offsetkafka-controller怎么查找到对应的消息\"><a class=\"anchor\" href=\"#616-如果我指定了一个offsetkafka-controller怎么查找到对应的消息\">#</a> 6.16 如果我指定了一个 offset，Kafka Controller 怎么查找到对应的消息？</h3>\n<pre><code>通过offset，消息的偏移量，通过日志目录的文件顺序号，根据区间范围找到消息所在的inde和log目录。\n其次根据在index表中的消息偏移量找到真实数据在log文件中该消息的起始索引位置。\n</code></pre>\n<h3 id=\"617聊一聊kafka-controller的作用\"><a class=\"anchor\" href=\"#617聊一聊kafka-controller的作用\">#</a> 6.17 聊一聊 Kafka Controller 的作用？</h3>\n<pre><code>1、负责leader的选举；\n2、负责监控leader的状态；\n3.负责更新集群在zookeeper中的状态。\n</code></pre>\n<h3 id=\"618-kafka中有那些地方需要选举这些地方的选举策略又有哪些\"><a class=\"anchor\" href=\"#618-kafka中有那些地方需要选举这些地方的选举策略又有哪些\">#</a> 6.18  Kafka 中有那些地方需要选举？这些地方的选举策略又有哪些？</h3>\n<pre><code>1.每个分区的leader选举；(isr)；\n2.controller的选举（先到先得）。\n</code></pre>\n<h3 id=\"619-失效副本是指什么有那些应对措施\"><a class=\"anchor\" href=\"#619-失效副本是指什么有那些应对措施\">#</a> 6.19  失效副本是指什么？有那些应对措施？</h3>\n<pre><code>follower不能与leader进行同步数据，暂时被leader踢出isr列表中。通过followe故障恢复重新备份，当leo达到了isr中的hw时，又重新会回到isr的列表中。\n</code></pre>\n<h3 id=\"620-kafka的那些设计让它有如此高的性能\"><a class=\"anchor\" href=\"#620-kafka的那些设计让它有如此高的性能\">#</a> 6.20  Kafka 的那些设计让它有如此高的性能？</h3>\n<pre><code>1. pagecache；\n2.顺序读写机制；\n3.零拷贝技术；\n4.多分区策略。\n</code></pre>\n<h2 id=\"七-flume与kafka融合技术\"><a class=\"anchor\" href=\"#七-flume与kafka融合技术\">#</a> 七 、flume 与 kafka 融合技术</h2>\n<p>kafka：数据的中转站，主要功能由 topic 体现；</p>\n<p>flume：数据的采集，通过 source 和 sink 体现。</p>\n<h3 id=\"71-kafka-source\"><a class=\"anchor\" href=\"#71-kafka-source\">#</a> 7.1 kafka source</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 问题 ：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>fulme在kafka中的作用</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 答案：</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>消费者</pre></td></tr></table></figure><figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flume<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>KafkaSource <span class=\"token comment\">--source 类型</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>bootstrap<span class=\"token punctuation\">.</span>servers <span class=\"token operator\">=</span> hadoop105:<span class=\"token number\">9092</span><span class=\"token punctuation\">,</span>hadoop106:<span class=\"token number\">9092</span> <span class=\"token comment\">-- kafka 的集群</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>topics<span class=\"token operator\">=</span>topic_log <span class=\"token comment\">-- 订阅的话题</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>batchSize<span class=\"token operator\">=</span><span class=\"token number\">6000</span> <span class=\"token comment\">--putlist 中数据达到了 6K 以后提交到 channel 中</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>batchDurationMillis<span class=\"token operator\">=</span><span class=\"token number\">2000</span> <span class=\"token comment\">-- 拉取数据的时间达到 2s 以后，将获取的数据提交到 channel 中</span></pre></td></tr></table></figure><h3 id=\"72-kakfa-channel\"><a class=\"anchor\" href=\"#72-kakfa-channel\">#</a> 7.2 kakfa channel</h3>\n<ul>\n<li>kakfa channel 这种情况使用的最多，此时的 flume 可以是消费者、生产者、source 和 sink 之间的缓冲区（具有高吞吐量的优势），Channel 是位于 Source 和 Sink 之间的缓冲区。</li>\n<li>一共有三种情况，分别是:</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 情况一： 有 Flume source and sink -- 缓冲区</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>kakfa channel为事件提供了可靠且高可用的通道；</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">-- 情况二： 有 source and interceptor but no sink -- 生产者</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>it allows writing Flume events <span class=\"token keyword\">into</span> a Kafka topic<span class=\"token punctuation\">,</span> <span class=\"token keyword\">for</span> <span class=\"token keyword\">use</span> <span class=\"token keyword\">by</span> other app</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">-- 情况三： 有 sink, but no source -- 消费者</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>it <span class=\"token operator\">is</span> a low<span class=\"token operator\">-</span>latency<span class=\"token punctuation\">,</span> fault tolerant way <span class=\"token keyword\">to</span> send events <span class=\"token keyword\">from</span> Kafka <span class=\"token keyword\">to</span> Flume sinks such <span class=\"token keyword\">as</span> HDFS<span class=\"token punctuation\">,</span> HBase <span class=\"token operator\">or</span> Solr</pre></td></tr></table></figure><p>官方配置文件：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flume<span class=\"token punctuation\">.</span>channel<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>KafkaChannel <span class=\"token comment\">----channel 类型</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>bootstrap<span class=\"token punctuation\">.</span>servers <span class=\"token operator\">=</span> hadoop105:<span class=\"token number\">9092</span><span class=\"token punctuation\">,</span>hadoop106:<span class=\"token number\">9092</span><span class=\"token punctuation\">,</span>hadoop107:<span class=\"token number\">9092</span> <span class=\"token comment\">--kafka 集群</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>topic <span class=\"token operator\">=</span>topic_log <span class=\"token comment\">-- 话题</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>parseAsFlumeEvent<span class=\"token operator\">=</span><span class=\"token boolean\">false</span> <span class=\"token comment\">-- 不需要 event 的 header 数据</span></pre></td></tr></table></figure><h3 id=\"73-kafka-sink\"><a class=\"anchor\" href=\"#73-kafka-sink\">#</a> 7.3 kafka sink</h3>\n<p>作用：将数据拉去到 kafka 的 topic 中。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flume<span class=\"token punctuation\">.</span>sink<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>KafkaSink <span class=\"token comment\">--sink 类型</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>topic <span class=\"token operator\">=</span>topic_log <span class=\"token comment\">-- 话题</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>bootstrap<span class=\"token punctuation\">.</span>servers <span class=\"token operator\">=</span> hadoop105:<span class=\"token number\">9092</span><span class=\"token punctuation\">,</span>hadoop106:<span class=\"token number\">9092</span><span class=\"token punctuation\">,</span>hadoop107:<span class=\"token number\">9092</span> <span class=\"token comment\">--kafka 集群</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>flumeBatchSize <span class=\"token operator\">=</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>producer<span class=\"token punctuation\">.</span>acks <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token comment\">-- 副本策略</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>producer<span class=\"token punctuation\">.</span>linger<span class=\"token punctuation\">.</span>ms <span class=\"token operator\">=</span> <span class=\"token number\">1</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>producer<span class=\"token punctuation\">.</span>compression<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> snappy  <span class=\"token comment\">-- 压缩格式</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://github.com/Mayizono/miyazono.github.io/big-data/flume/Flume%E7%BB%83%E4%B9%A0%E9%A2%98/",
            "url": "https://github.com/Mayizono/miyazono.github.io/big-data/flume/Flume%E7%BB%83%E4%B9%A0%E9%A2%98/",
            "title": "Flume练习题",
            "date_published": "2020-08-09T16:00:00.000Z",
            "content_html": "<h1 id=\"flume练习题\"><a class=\"anchor\" href=\"#flume练习题\">#</a> Flume 练习题</h1>\n<hr />\n<h2 id=\"题目1\"><a class=\"anchor\" href=\"#题目1\">#</a> 题目 1</h2>\n<p>需求：使用 Flume 监听一个端口，收集该端口数据，并打印到控制台。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#步骤一：agent Name</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources <span class=\"token operator\">=</span> r1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks <span class=\"token operator\">=</span> k1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#步骤二：source</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> netcat</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>bind <span class=\"token operator\">=</span> localhost </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> <span class=\"token number\">44444</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#步骤三： channel selector</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> replicating</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">#步骤四： channel</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># Describe the channel</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> memory</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>capacity <span class=\"token operator\">=</span> <span class=\"token number\">1000</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>transactionCapacity <span class=\"token operator\">=</span> <span class=\"token number\">100</span> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">#步骤五： sinkprocessor，默认配置 defaultsinkprocessor</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">#步骤六： sink</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># Describe the sink</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> logger</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">#步骤七：连接 source、channel、sink</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> c1</pre></td></tr></table></figure><h2 id=\"题目2\"><a class=\"anchor\" href=\"#题目2\">#</a> 题目 2</h2>\n<p>实时监控 Hive 日志，并上传到 HDFS 中</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#步骤一：agent Name</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources <span class=\"token operator\">=</span> r1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks <span class=\"token operator\">=</span> k1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#步骤二：source</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">exec</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>command <span class=\"token operator\">=</span> tail <span class=\"token operator\">-</span>F <span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>hive<span class=\"token operator\">/</span>logs<span class=\"token operator\">/</span>hive<span class=\"token punctuation\">.</span>log </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>shell <span class=\"token operator\">=</span> <span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>bash <span class=\"token operator\">-</span>c</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#步骤三： channel selector</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> replicating</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#步骤四： channel</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># Describe the channel</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> memory</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>capacity <span class=\"token operator\">=</span> <span class=\"token number\">1000</span> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>transactionCapacity <span class=\"token operator\">=</span> <span class=\"token number\">100</span> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">#步骤五： sinkprocessor，默认配置 defaultsinkprocessor</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">#步骤六： sink</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> hdfs</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>path <span class=\"token operator\">=</span> hdfs:<span class=\"token comment\">//hadoop102:9820/flume/upload2/%Y%m%d/%H   </span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">#上传文件的前缀</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>filePrefix <span class=\"token operator\">=</span> upload<span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">#是否按照时间滚动文件夹</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>round <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">#多少时间单位创建一个新的文件夹</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>roundValue <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">#重新定义时间单位</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>roundUnit <span class=\"token operator\">=</span> <span class=\"token keyword\">hour</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">#是否使用本地时间戳</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>useLocalTimeStamp <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">#积攒多少个 Event 才 flush 到 HDFS 一次</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>batchSize <span class=\"token operator\">=</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">#设置文件类型，可支持压缩</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>fileType <span class=\"token operator\">=</span> DataStream</pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">#多久生成一个新的文件</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>rollInterval <span class=\"token operator\">=</span> <span class=\"token number\">60</span> </pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">#设置每个文件的滚动大小大概是 128M</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>rollSize <span class=\"token operator\">=</span> <span class=\"token number\">134217700</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\">#文件的滚动与 Event 数量无关</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>rollCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">#步骤七：连接 source、channel、sink</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> c1</pre></td></tr></table></figure><h2 id=\"题目3\"><a class=\"anchor\" href=\"#题目3\">#</a> 题目 3</h2>\n<p>使用 Flume 监听整个目录的文件，并上传至 HDFS</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#步骤一：agent Name</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources <span class=\"token operator\">=</span> r1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks <span class=\"token operator\">=</span> k1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#步骤二：source</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># Describe/configure the source</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> spooldir </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>spoolDir <span class=\"token operator\">=</span> <span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>flume<span class=\"token operator\">/</span>upload </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>fileSuffix <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span>COMPLETED </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>fileHeader <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#忽略所有以.tmp 结尾的文件，不上传</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>ignorePattern <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">^</span> <span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>\\<span class=\"token punctuation\">.</span>tmp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">#步骤三： channel selector</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> replicating</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">#步骤四： channel</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># Describe the channel</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> memory</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>capacity <span class=\"token operator\">=</span> <span class=\"token number\">1000</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>transactionCapacity <span class=\"token operator\">=</span> <span class=\"token number\">100</span> </pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">#步骤五： sinkprocessor，默认配置 defaultsinkprocessor</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">#步骤六： sink</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> hdfs</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>path <span class=\"token operator\">=</span> hdfs:<span class=\"token comment\">//hadoop102:9820/flume/upload/%Y%m%d/%H   </span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">#上传文件的前缀</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>filePrefix <span class=\"token operator\">=</span> upload<span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">#是否按照时间滚动文件夹</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>round <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">#多少时间单位创建一个新的文件夹</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>roundValue <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">#重新定义时间单位</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>roundUnit <span class=\"token operator\">=</span> <span class=\"token keyword\">hour</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">#是否使用本地时间戳</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>useLocalTimeStamp <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">#积攒多少个 Event 才 flush 到 HDFS 一次</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>batchSize <span class=\"token operator\">=</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">#设置文件类型，可支持压缩</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>fileType <span class=\"token operator\">=</span> DataStream</pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\">#多久生成一个新的文件</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>rollInterval <span class=\"token operator\">=</span> <span class=\"token number\">60</span> </pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">#设置每个文件的滚动大小大概是 128M</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>rollSize <span class=\"token operator\">=</span> <span class=\"token number\">134217700</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\">#文件的滚动与 Event 数量无关</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>rollCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\">#步骤七：连接 source、channel、sink</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> c1</pre></td></tr></table></figure><h2 id=\"题目4\"><a class=\"anchor\" href=\"#题目4\">#</a> 题目 4</h2>\n<p>使用 Flume 监听整个目录的实时追加文件，并上传至 HDFS</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#步骤一：agent Name</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources <span class=\"token operator\">=</span> r1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks <span class=\"token operator\">=</span> k1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#步骤二：source</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># Describe/configure the source</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> TAILDIR </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>positionFile <span class=\"token operator\">=</span> <span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>flume<span class=\"token operator\">/</span>tail_dir<span class=\"token punctuation\">.</span>json <span class=\"token comment\">-- 指定 position_file 的位置 (记录每次上传后的偏移量，实现断点续传的关键)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>filegroups <span class=\"token operator\">=</span> f1 f2 <span class=\"token comment\">-- 监控的文件目录集合</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>filegroups<span class=\"token punctuation\">.</span>f1 <span class=\"token operator\">=</span> <span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>flume<span class=\"token operator\">/</span>files<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token keyword\">file</span><span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token comment\">-- 定义监控的文件目录 1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>filegroups<span class=\"token punctuation\">.</span>f2 <span class=\"token operator\">=</span> <span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>flume<span class=\"token operator\">/</span>files<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span><span class=\"token operator\">*</span>log<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token comment\">-- 定义监控的文件目录 2</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#步骤三： channel selector</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> replicating</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#步骤四： channel</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># Describe the channel</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> memory</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>capacity <span class=\"token operator\">=</span> <span class=\"token number\">1000</span> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>transactionCapacity <span class=\"token operator\">=</span> <span class=\"token number\">100</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">#步骤五： sinkprocessor，默认配置 defaultsinkprocessor</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">#步骤六： sink</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> hdfs</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>path <span class=\"token operator\">=</span> hdfs:<span class=\"token comment\">//hadoop102:9820/flume/upload3/%Y%m%d/%H   </span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">#上传文件的前缀</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>filePrefix <span class=\"token operator\">=</span> upload<span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">#是否按照时间滚动文件夹</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>round <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">#多少时间单位创建一个新的文件夹</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>roundValue <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">#重新定义时间单位</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>roundUnit <span class=\"token operator\">=</span> <span class=\"token keyword\">hour</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">#是否使用本地时间戳</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>useLocalTimeStamp <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">#积攒多少个 Event 才 flush 到 HDFS 一次</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>batchSize <span class=\"token operator\">=</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">#设置文件类型，可支持压缩</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>fileType <span class=\"token operator\">=</span> DataStream</pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\">#多久生成一个新的文件</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>rollInterval <span class=\"token operator\">=</span> <span class=\"token number\">60</span> </pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">#设置每个文件的滚动大小大概是 128M</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>rollSize <span class=\"token operator\">=</span> <span class=\"token number\">134217700</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\">#文件的滚动与 Event 数量无关</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>rollCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\">#步骤七：连接 source、channel、sink</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> c1</pre></td></tr></table></figure><h2 id=\"题目5\"><a class=\"anchor\" href=\"#题目5\">#</a> 题目 5</h2>\n<p>使用 Flume-1 监控文件变动，Flume-1 将变动内容传递给 Flume-2，Flume-2 负责存储到 HDFS。同时 Flume-1 将变动内容传递给 Flume-3，Flume-3 负责输出到 Local FileSystem。</p>\n<ul>\n<li>flume1：</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#步骤一：agent Name</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources <span class=\"token operator\">=</span> r1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks <span class=\"token operator\">=</span> k1 k2</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1 c2</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#步骤二：source</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># Describe/configure the source</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> TAILDIR </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>positionFile <span class=\"token operator\">=</span> <span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>flume<span class=\"token operator\">/</span>tail_dir<span class=\"token punctuation\">.</span>json </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>filegroups <span class=\"token operator\">=</span> f1</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>filegroups<span class=\"token punctuation\">.</span>f1 <span class=\"token operator\">=</span> <span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>flume<span class=\"token operator\">/</span>files<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span><span class=\"token operator\">*</span>log<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#步骤三： channel selector</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> replicating</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#步骤四： channel</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># Describe the channel</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> memory</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>capacity <span class=\"token operator\">=</span> <span class=\"token number\">1000</span> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>transactionCapacity <span class=\"token operator\">=</span> <span class=\"token number\">100</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c2<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> memory</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c2<span class=\"token punctuation\">.</span>capacity <span class=\"token operator\">=</span> <span class=\"token number\">1000</span> </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c2<span class=\"token punctuation\">.</span>transactionCapacity <span class=\"token operator\">=</span> <span class=\"token number\">100</span> </pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">#步骤五： sinkprocessor，默认配置 defaultsinkprocessor</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">#步骤六： sink</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># Describe the sink</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> avro</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hostname <span class=\"token operator\">=</span> hadoop103 </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> <span class=\"token number\">6666</span>  </pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k2<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> avro</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k2<span class=\"token punctuation\">.</span>hostname <span class=\"token operator\">=</span> hadoop104 </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k2<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> <span class=\"token number\">8888</span>  </pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">#步骤七：连接 source、channel、sink</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1 c2</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k2<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> c2</pre></td></tr></table></figure><ul>\n<li>flume2:</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#步骤一：agent Name</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources <span class=\"token operator\">=</span> r1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks <span class=\"token operator\">=</span> k1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#步骤二：source</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># Describe/configure the source</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> avro</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>bind <span class=\"token operator\">=</span> hadoop103 </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> <span class=\"token number\">6666</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#步骤三： channel selector</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> replicating</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#步骤四： channel</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># Describe the channel</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> memory</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>capacity <span class=\"token operator\">=</span> <span class=\"token number\">1000</span> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>transactionCapacity <span class=\"token operator\">=</span> <span class=\"token number\">100</span> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">#步骤五： sinkprocessor，默认配置 defaultsinkprocessor</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">#步骤六： sink</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># Describe the sink</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> hdfs</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>path <span class=\"token operator\">=</span> hdfs:<span class=\"token comment\">//hadoop102:9820/flume/upload4/%Y%m%d/%H   </span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">#上传文件的前缀</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>filePrefix <span class=\"token operator\">=</span> upload<span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">#是否按照时间滚动文件夹</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>round <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">#多少时间单位创建一个新的文件夹</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>roundValue <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">#重新定义时间单位</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>roundUnit <span class=\"token operator\">=</span> <span class=\"token keyword\">hour</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">#是否使用本地时间戳</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>useLocalTimeStamp <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">#积攒多少个 Event 才 flush 到 HDFS 一次</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>batchSize <span class=\"token operator\">=</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">#设置文件类型，可支持压缩</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>fileType <span class=\"token operator\">=</span> DataStream</pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">#多久生成一个新的文件</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>rollInterval <span class=\"token operator\">=</span> <span class=\"token number\">60</span>  </pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\">#设置每个文件的滚动大小大概是 128M</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>rollSize <span class=\"token operator\">=</span> <span class=\"token number\">134217700</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">#文件的滚动与 Event 数量无关</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>rollCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\">#步骤七：连接 source、channel、sink</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> c1</pre></td></tr></table></figure><ul>\n<li>flum3:</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#步骤一：agent Name</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources <span class=\"token operator\">=</span> r1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks <span class=\"token operator\">=</span> k1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#步骤二：source</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># Describe/configure the source</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> avro</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>bind <span class=\"token operator\">=</span> hadoop104 </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> <span class=\"token number\">8888</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#步骤三： channel selector</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> replicating</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#步骤四： channel</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># Describe the channel</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> memory</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>capacity <span class=\"token operator\">=</span> <span class=\"token number\">1000</span> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>transactionCapacity <span class=\"token operator\">=</span> <span class=\"token number\">100</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">#步骤五： sinkprocessor，默认配置 defaultsinkprocessor</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">#步骤六： sink</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># Describe the sink</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> file_roll</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>sink<span class=\"token punctuation\">.</span>directory <span class=\"token operator\">=</span> <span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>flume<span class=\"token operator\">/</span>datas<span class=\"token operator\">/</span>flume3</pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">#步骤七：连接 source、channel、sink</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> c1</pre></td></tr></table></figure><h2 id=\"题目6\"><a class=\"anchor\" href=\"#题目6\">#</a> 题目 6</h2>\n<p>使用 Flume1 监控一个端口，其 sink 组中的 sink 分别对接 Flume2 和 Flume3，采用 FailoverSinkProcessor，实现故障转移的功能</p>\n<ul>\n<li>flume1</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#步骤一：agent Name</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources <span class=\"token operator\">=</span> r1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinkgroups <span class=\"token operator\">=</span> g1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks <span class=\"token operator\">=</span> k1 k2</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#步骤二：source</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># Describe/configure the source</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> netcat</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>bind <span class=\"token operator\">=</span> localhost </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> <span class=\"token number\">44444</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#步骤三： channel selector</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> replicating</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">#步骤四： channel</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># Describe the channel</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> memory</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>capacity <span class=\"token operator\">=</span> <span class=\"token number\">1000</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>transactionCapacity <span class=\"token operator\">=</span> <span class=\"token number\">100</span> </pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">#步骤五： sinkprocessor</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinkgroups<span class=\"token punctuation\">.</span>g1<span class=\"token punctuation\">.</span>processor<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> failover </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinkgroups<span class=\"token punctuation\">.</span>g1<span class=\"token punctuation\">.</span>processor<span class=\"token punctuation\">.</span>priority<span class=\"token punctuation\">.</span>k1 <span class=\"token operator\">=</span> <span class=\"token number\">10</span> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinkgroups<span class=\"token punctuation\">.</span>g1<span class=\"token punctuation\">.</span>processor<span class=\"token punctuation\">.</span>priority<span class=\"token punctuation\">.</span>k2 <span class=\"token operator\">=</span> <span class=\"token number\">5</span> </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinkgroups<span class=\"token punctuation\">.</span>g1<span class=\"token punctuation\">.</span>processor<span class=\"token punctuation\">.</span>maxpenalty <span class=\"token operator\">=</span> <span class=\"token number\">10000</span> </pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">#步骤六： sink</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># Describe the sink</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> avro</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hostname <span class=\"token operator\">=</span> hadoop103</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> <span class=\"token number\">1111</span>  </pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k2<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> avro</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k2<span class=\"token punctuation\">.</span>hostname <span class=\"token operator\">=</span> hadoop104</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k2<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> <span class=\"token number\">2222</span>  </pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\">#步骤七：连接 source、channel、sink</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinkgroups<span class=\"token punctuation\">.</span>g1<span class=\"token punctuation\">.</span>sinks <span class=\"token operator\">=</span> k1 k2</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k2<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> c1</pre></td></tr></table></figure><ul>\n<li>flume2</li>\n</ul>\n<pre><code class=\"language-Sql\">#步骤一：agent Name\na1.sources = r1\na1.sinks = k1\na1.channels = c1\n\n#步骤二：source\n# Describe/configure the source\na1.sources.r1.type = avro\na1.sources.r1.bind = hadoop103\na1.sources.r1.port = 1111 \n\n#步骤三： channel selector\na1.sources.r1.selector.type = replicating\n\n#步骤四： channel\n# Describe the channel\na1.channels.c1.type = memory\na1.channels.c1.capacity = 1000 \na1.channels.c1.transactionCapacity = 100 \n\n#步骤五： sinkprocessor，默认配置defaultsinkprocessor\n\n#步骤六： sink\n# Describe the sink\na1.sinks.k1.type = logger \n\n#步骤七：连接source、channel、sink\na1.sources.r1.channels = c1\na1.sinks.k1.channel = c1\n</code></pre>\n<ul>\n<li>flume3</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#步骤一：agent Name</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources <span class=\"token operator\">=</span> r1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks <span class=\"token operator\">=</span> k1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#步骤二：source</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># Describe/configure the source</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> avro</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>bind <span class=\"token operator\">=</span> hadoop104</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> <span class=\"token number\">2222</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#步骤三： channel selector</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> replicating</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#步骤四： channel</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># Describe the channel</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> memory</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>capacity <span class=\"token operator\">=</span> <span class=\"token number\">1000</span> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>transactionCapacity <span class=\"token operator\">=</span> <span class=\"token number\">100</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">#步骤五： sinkprocessor，默认配置 defaultsinkprocessor</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">#步骤六： sink</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># Describe the sink</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> logger </pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">#步骤七：连接 source、channel、sink</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> c1</pre></td></tr></table></figure><h2 id=\"题目7\"><a class=\"anchor\" href=\"#题目7\">#</a> 题目 7</h2>\n<p>hadoop102 上的 Flume-1 监控文件 /opt/module/group.log，</p>\n<p>hadoop103 上的 Flume-2 监控某一个端口的数据流，</p>\n<p>Flume-1 与 Flume-2 将数据发送给 hadoop104 上的 Flume-3，Flume-3 将最终数据打印到控制台。</p>\n<ul>\n<li>flume1</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#步骤一：agent Name</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources <span class=\"token operator\">=</span> r1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks <span class=\"token operator\">=</span> k1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#步骤二：source</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> TAILDIR </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>positionFile <span class=\"token operator\">=</span> <span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>flume<span class=\"token operator\">/</span>tail_dir<span class=\"token punctuation\">.</span>json </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>filegroups <span class=\"token operator\">=</span> f1</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>filegroups<span class=\"token punctuation\">.</span>f1 <span class=\"token operator\">=</span> <span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>flume<span class=\"token operator\">/</span>files<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span><span class=\"token operator\">*</span>log<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#步骤三： channel selector</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> replicating</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#步骤四： channel</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># Describe the channel</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> memory</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>capacity <span class=\"token operator\">=</span> <span class=\"token number\">1000</span> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>transactionCapacity <span class=\"token operator\">=</span> <span class=\"token number\">100</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">#步骤五： sinkprocessor，默认配置 defaultsinkprocessor</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">#步骤六： sink</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># Describe the sink</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> avro</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hostname <span class=\"token operator\">=</span> hadoop104</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> <span class=\"token number\">4141</span>  </pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">#步骤七：连接 source、channel、sink</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> c1</pre></td></tr></table></figure><ul>\n<li>flume2</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#步骤一：agent Name</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources <span class=\"token operator\">=</span> r1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks <span class=\"token operator\">=</span> k1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#步骤二：source</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> netcat</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>bind <span class=\"token operator\">=</span> localhost </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> <span class=\"token number\">3333</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#步骤三： channel selector</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> replicating</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">#步骤四： channel</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># Describe the channel</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> memory</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>capacity <span class=\"token operator\">=</span> <span class=\"token number\">1000</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>transactionCapacity <span class=\"token operator\">=</span> <span class=\"token number\">100</span> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">#步骤五： sinkprocessor，默认配置 defaultsinkprocessor</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">#步骤六： sink</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># Describe the sink</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> avro</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hostname <span class=\"token operator\">=</span> hadoop104</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> <span class=\"token number\">4141</span>  </pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">#步骤七：连接 source、channel、sink</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> c1</pre></td></tr></table></figure><ul>\n<li>flume3</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#步骤一：agent Name</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources <span class=\"token operator\">=</span> r1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks <span class=\"token operator\">=</span> k1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#步骤二：source</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> avro</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>bind <span class=\"token operator\">=</span> hadoop104</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> <span class=\"token number\">4141</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#步骤三： channel selector</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> replicating</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">#步骤四： channel</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># Describe the channel</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> memory</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>capacity <span class=\"token operator\">=</span> <span class=\"token number\">1000</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>transactionCapacity <span class=\"token operator\">=</span> <span class=\"token number\">100</span> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">#步骤五： sinkprocessor，默认配置 defaultsinkprocessor</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">#步骤六： sink</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># Describe the sink</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> logger </pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">#步骤七：连接 source、channel、sink</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> c1</pre></td></tr></table></figure><h2 id=\"题目8\"><a class=\"anchor\" href=\"#题目8\">#</a> 题目 8</h2>\n<p>需求：</p>\n<ol>\n<li>\n<p>a1 102 接收 TailDirSource 数据，监控 /var/log/*.log，复制输出到 a2 a3</p>\n</li>\n<li>\n<p>a2 103 接收 a1 数据，输出到 HDFS，failover 到本地 FileRoll</p>\n</li>\n<li>\n<p>a3 104 接收 a1 数据，输出到控制台</p>\n</li>\n</ol>\n<ul>\n<li>flume1</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#步骤一：agent Name</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources <span class=\"token operator\">=</span> r1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks <span class=\"token operator\">=</span> k1 k2</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1 c2</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#步骤二：source</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> TAILDIR </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>positionFile <span class=\"token operator\">=</span> <span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>flume<span class=\"token operator\">/</span>tail_dir<span class=\"token punctuation\">.</span>json </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>filegroups <span class=\"token operator\">=</span> f1 </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>filegroups<span class=\"token punctuation\">.</span>f1 <span class=\"token operator\">=</span> <span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>flume<span class=\"token operator\">/</span>files<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token keyword\">file</span><span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#步骤三： channel selector</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> replicating</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">#步骤四： channel</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># Describe the channel</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> memory</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>capacity <span class=\"token operator\">=</span> <span class=\"token number\">1000</span> </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>transactionCapacity <span class=\"token operator\">=</span> <span class=\"token number\">100</span> </pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c2<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> memory</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c2<span class=\"token punctuation\">.</span>capacity <span class=\"token operator\">=</span> <span class=\"token number\">1000</span> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c2<span class=\"token punctuation\">.</span>transactionCapacity <span class=\"token operator\">=</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">#步骤五： sinkprocessor，默认配置 defaultsinkprocessor</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">#步骤六： sink</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># Describe the sink</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> avro</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hostname <span class=\"token operator\">=</span> hadoop103</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> <span class=\"token number\">6666</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k2<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> avro</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k2<span class=\"token punctuation\">.</span>hostname <span class=\"token operator\">=</span> hadoop104 </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k2<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> <span class=\"token number\">8888</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">#步骤七：连接 source、channel、sink</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1 c2</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k2<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> c2</pre></td></tr></table></figure><ul>\n<li>flume2:</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#步骤一：agent Name</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources <span class=\"token operator\">=</span> r1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinkgroups <span class=\"token operator\">=</span> g1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks <span class=\"token operator\">=</span> k1 k2</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#步骤二：source</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> avro</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>bind <span class=\"token operator\">=</span> hadoop103</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> <span class=\"token number\">6666</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#步骤三： channel selector</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> replicating</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#步骤四： channel</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># Describe the channel</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> memory</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>capacity <span class=\"token operator\">=</span> <span class=\"token number\">1000</span> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>transactionCapacity <span class=\"token operator\">=</span> <span class=\"token number\">100</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">#步骤五： sinkprocessor，默认配置 defaultsinkprocessor</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinkgroups<span class=\"token punctuation\">.</span>g1<span class=\"token punctuation\">.</span>processor<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> failover </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinkgroups<span class=\"token punctuation\">.</span>g1<span class=\"token punctuation\">.</span>processor<span class=\"token punctuation\">.</span>priority<span class=\"token punctuation\">.</span>k1 <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinkgroups<span class=\"token punctuation\">.</span>g1<span class=\"token punctuation\">.</span>processor<span class=\"token punctuation\">.</span>priority<span class=\"token punctuation\">.</span>k2 <span class=\"token operator\">=</span> <span class=\"token number\">5</span> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinkgroups<span class=\"token punctuation\">.</span>g1<span class=\"token punctuation\">.</span>processor<span class=\"token punctuation\">.</span>maxpenalty <span class=\"token operator\">=</span> <span class=\"token number\">10000</span> </pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">#步骤六： sink</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># Describe the sink</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> hdfs</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>path <span class=\"token operator\">=</span> hdfs:<span class=\"token comment\">//hadoop102:9820/flume/upload2/%Y%m%d/%H  </span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">#上传文件的前缀</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>filePrefix <span class=\"token operator\">=</span> upload<span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">#是否按照时间滚动文件夹</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>round <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">#多少时间单位创建一个新的文件夹</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>roundValue <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">#重新定义时间单位</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>roundUnit <span class=\"token operator\">=</span> <span class=\"token keyword\">hour</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\">#是否使用本地时间戳</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>useLocalTimeStamp <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">#积攒多少个 Event 才 flush 到 HDFS 一次</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>batchSize <span class=\"token operator\">=</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\">#设置文件类型，可支持压缩</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>fileType <span class=\"token operator\">=</span> DataStream</pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\">#多久生成一个新的文件</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>rollInterval <span class=\"token operator\">=</span> <span class=\"token number\">60</span>  </pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token comment\">#设置每个文件的滚动大小大概是 128M</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>rollSize <span class=\"token operator\">=</span> <span class=\"token number\">134217700</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token comment\">#文件的滚动与 Event 数量无关</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>rollCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k2<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> logger</pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\">#步骤七：连接 source、channel、sink</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinkgroups<span class=\"token punctuation\">.</span>g1<span class=\"token punctuation\">.</span>sinks <span class=\"token operator\">=</span> k1 k2</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k2<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> c1</pre></td></tr></table></figure><ul>\n<li>flume3:</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#步骤一：agent Name</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources <span class=\"token operator\">=</span> r1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks <span class=\"token operator\">=</span> k1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#步骤二：source</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> avro</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>bind <span class=\"token operator\">=</span> hadoop104</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> <span class=\"token number\">8888</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#步骤三： channel selector</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> replicating</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">#步骤四： channel</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># Describe the channel</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> memory</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>capacity <span class=\"token operator\">=</span> <span class=\"token number\">1000</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>transactionCapacity <span class=\"token operator\">=</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">#步骤五： sinkprocessor，默认配置 defaultsinkprocessor</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">#步骤六： sink</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># Describe the sink</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> logger</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">#步骤七：连接 source、channel、sink</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> c1</pre></td></tr></table></figure>",
            "tags": [
                "大数据",
                "Flume"
            ]
        },
        {
            "id": "https://github.com/Mayizono/miyazono.github.io/big-data/flume/Flume/",
            "url": "https://github.com/Mayizono/miyazono.github.io/big-data/flume/Flume/",
            "title": "Flume基础学习",
            "date_published": "2020-08-05T16:00:00.000Z",
            "content_html": "<h2 id=\"一-写flume的步骤\"><a class=\"anchor\" href=\"#一-写flume的步骤\">#</a> 一、写 flume 的步骤</h2>\n<h3 id=\"100-flume-事务\"><a class=\"anchor\" href=\"#100-flume-事务\">#</a> 1.0.0 Flume 事务</h3>\n<p><img data-src=\"https://miyazono-1255488789.cos.ap-shanghai.myqcloud.com/markdown/20210820202104.png\" alt=\"image-flume-事务\" /></p>\n<h3 id=\"101-flume-agent内部原理\"><a class=\"anchor\" href=\"#101-flume-agent内部原理\">#</a> 1.0.1 Flume Agent 内部原理</h3>\n<p>​\t\t\t\t\t\t\t\t\t\t\t\t<img data-src=\"https://miyazono-1255488789.cos.ap-shanghai.myqcloud.com/markdown/20210820202313.png\" alt=\"image-flume-agent\" />\t\t\t\t\t\t\t\t\t\t\t\t图 1</p>\n<h3 id=\"11-画拓扑图\"><a class=\"anchor\" href=\"#11-画拓扑图\">#</a> 1.1 画拓扑图</h3>\n<blockquote>\n<p>总结：一个 channel 只能输出一个结果文件。</p>\n<p>一个 flume agent 由 source + channel + sink 构成，类比于 mapper + shuffer + reducer。</p>\n</blockquote>\n<h4 id=\"111-确定source类型\"><a class=\"anchor\" href=\"#111-确定source类型\">#</a> 1.1.1 确定 source 类型</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>常用类型：</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> arvo:  用于Flume agent 之间的数据源传递</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> netcat: 用于监听端口</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token number\">3</span>）<span class=\"token keyword\">exec</span>: 用于执行linux中的操作指令</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> spooldir: 用于监视文件或目录</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> taildir: 用于监视文件或目录，同时支持追加的监听</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t总结 ，<span class=\"token number\">3</span><span class=\"token operator\">/</span><span class=\"token number\">4</span><span class=\"token operator\">/</span><span class=\"token number\">5</span>三种方式，最常用的是<span class=\"token number\">5</span>，适合用于监听多个实时追加的文件，并且能够实现断点续传。</pre></td></tr></table></figure><h4 id=\"112-确定channel-selector-的选择器\"><a class=\"anchor\" href=\"#112-确定channel-selector-的选择器\">#</a> 1.1.2 <strong>确定 channel selector 的选择器</strong></h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1</span>）replicating channel selector：复制，每个channel发一份数据 <span class=\"token comment\">-- 默认的选择器</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> multiplexing channel selector : 根据配置配件，指定source源获取的数据发往一个或多个channel</pre></td></tr></table></figure><h4 id=\"113-确认channel类型参数\"><a class=\"anchor\" href=\"#113-确认channel类型参数\">#</a> <strong>1.1.3 确认 channel 类型参数</strong></h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1</span>） Memory Channel ： 加载在内存中，存在数据丢失的风险 <span class=\"token comment\">-- 学习阶段使用此参数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token number\">2</span>） <span class=\"token keyword\">File</span> Channel ：落入磁盘</pre></td></tr></table></figure><h4 id=\"114-确定sinkprocessor参数\"><a class=\"anchor\" href=\"#114-确定sinkprocessor参数\">#</a> <strong>1.1.4 确定 sinkprocessor 参数</strong></h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1</span>） DefaultSinkProcessor：对应的是单个的Sink</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token number\">2</span>） LoadBalancingSinkProcessor ：对应的是多个的Sink，可以实现负载均衡的功能</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token number\">3</span>） FailoverSinkProcessor ：对应的是多个的Sink，容错功能，先指定一个sink，所有的数据都走指定的sink，当sink故障以后，其他的sink顶上，如果开始sink恢复了，那么数据继续走原有指定的sink。</pre></td></tr></table></figure><h4 id=\"115-确定sink的类型\"><a class=\"anchor\" href=\"#115-确定sink的类型\">#</a> <strong>1.1.5 确定 sink 的类型</strong></h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>常使用的类型有：</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> avro: 用于输出到下一个Flume Agent ，一个开源的序列化框架</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> hdfs: 输出到hdfs</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> fill_roll: 输出到本地</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> logger: 输出到控制台</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> hbase: 输出到hbase</pre></td></tr></table></figure><h4 id=\"116-拓扑例图\"><a class=\"anchor\" href=\"#116-拓扑例图\">#</a> 1.1.6 拓扑例图</h4>\n<p>​\t\t\t\t\t\t\t\t\t\t<img data-src=\"https://miyazono-1255488789.cos.ap-shanghai.myqcloud.com/markdown/20210820202453.png\" alt=\"图2\" /></p>\n<p>​\t\t\t\t\t\t\t\t\t\t<img data-src=\"https://miyazono-1255488789.cos.ap-shanghai.myqcloud.com/markdown/20210820202537.png\" alt=\"图3\" /></p>\n<p>​\t图 3</p>\n<h3 id=\"12-写配置文件\"><a class=\"anchor\" href=\"#12-写配置文件\">#</a> 1.2 写配置文件</h3>\n<h4 id=\"121-配置文件的构成\"><a class=\"anchor\" href=\"#121-配置文件的构成\">#</a> 1.2.1 配置文件的构成</h4>\n<ol>\n<li>Name the components on this agent  -- agent Name</li>\n<li>Describe/configure the source  -- source</li>\n<li>channel selector</li>\n<li>Describe the channel  -- channel</li>\n<li>sinkprocessor</li>\n<li>Describe the sink   --sink</li>\n<li>Bind the source and sink to the channel -- 连接 source、channel、sink</li>\n</ol>\n<h4 id=\"122-agent-name\"><a class=\"anchor\" href=\"#122-agent-name\">#</a> 1.2.2   agent Name</h4>\n<p>情况 1：source、channel、sink 各一个</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources <span class=\"token operator\">=</span> r1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks <span class=\"token operator\">=</span> k1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr></table></figure><p>情况 2：source 一个、channel 一个、sink 多个</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources <span class=\"token operator\">=</span> r1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinkgroups <span class=\"token operator\">=</span> g1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks <span class=\"token operator\">=</span> k1 k2</pre></td></tr></table></figure><p>情况 3：source 一个、channel 多个、sink 多个</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources <span class=\"token operator\">=</span> r1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks <span class=\"token operator\">=</span> k1 k2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1 c2</pre></td></tr></table></figure><h4 id=\"123-source\"><a class=\"anchor\" href=\"#123-source\">#</a> 1.2.3  source</h4>\n<p>情况 1：avro</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> avro</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>bind <span class=\"token operator\">=</span> hadoop102 <span class=\"token comment\">-- hosename</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> <span class=\"token number\">4141</span> <span class=\"token comment\">-- 端口号</span></pre></td></tr></table></figure><p>情况 2：netcat</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> netcat</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>bind <span class=\"token operator\">=</span> localhost <span class=\"token comment\">-- 指接收来自 ip 为 localhost 发来的数据，如果是 0.0.0.0，则表示可以接收来自任意 ip 地址发来的数据</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> <span class=\"token number\">44444</span>  <span class=\"token comment\">-- 本机的端口号，从该端口接收数据</span></pre></td></tr></table></figure><p>情况 3：exec</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">exec</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>command <span class=\"token operator\">=</span> tail <span class=\"token operator\">-</span>F <span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>hive<span class=\"token operator\">/</span>logs<span class=\"token operator\">/</span>hive<span class=\"token punctuation\">.</span>log <span class=\"token comment\">-->linux 执行的命令</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>shell <span class=\"token operator\">=</span> <span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>bash <span class=\"token operator\">-</span>c <span class=\"token comment\">-- linux 的解析器</span></pre></td></tr></table></figure><p>情况 4: sqooldir</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Describe/configure the source</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> spooldir <span class=\"token comment\">-- 定义 source 类型</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>spoolDir <span class=\"token operator\">=</span> <span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>flume<span class=\"token operator\">/</span>upload <span class=\"token comment\">-- 定义监控的文件或目录</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>fileSuffix <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span>COMPLETED <span class=\"token comment\">-- 定义文件上传后的后缀</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>fileHeader <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">-- 是否有文件头</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#忽略所有以.tmp 结尾的文件，不上传</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>ignorePattern <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">^</span> <span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>\\<span class=\"token punctuation\">.</span>tmp<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>情况 5：talidir</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Describe/configure the source</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> TAILDIR </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>positionFile <span class=\"token operator\">=</span> <span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>flume<span class=\"token operator\">/</span>tail_dir<span class=\"token punctuation\">.</span>json <span class=\"token comment\">-- 指定 position_file 的位置，(记录每次上传后的偏移量，实现断点续传的关键)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>batchSize<span class=\"token operator\">=</span><span class=\"token number\">500</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>filegroups <span class=\"token operator\">=</span> f1 f2 <span class=\"token comment\">-- 监控的文件目录集合</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>filegroups<span class=\"token punctuation\">.</span>f1 <span class=\"token operator\">=</span> <span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>flume<span class=\"token operator\">/</span>files<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token keyword\">file</span><span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token comment\">-- 定义监控的文件目录 1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>filegroups<span class=\"token punctuation\">.</span>f2 <span class=\"token operator\">=</span> <span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>flume<span class=\"token operator\">/</span>files<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span><span class=\"token operator\">*</span>log<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token comment\">-- 定义监控的文件目录 2</span></pre></td></tr></table></figure><h4 id=\"124-channel-selector\"><a class=\"anchor\" href=\"#124-channel-selector\">#</a> 1.2.4 channel selector</h4>\n<p>情况 1： replicating channel selector</p>\n<pre><code># 将数据流复制给所有channel\na1.sources.r1.selector.type = replicating\n</code></pre>\n<p>情况 2：multiplexing channel selector 需配合指定的拦截器使用（interceptor）</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 指定拦截器</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>interceptors <span class=\"token operator\">=</span> i1 <span class=\"token comment\">-- 指定拦截器的名称</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>i1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> com<span class=\"token punctuation\">.</span>atguigu<span class=\"token punctuation\">.</span>flume<span class=\"token punctuation\">.</span>interceptor<span class=\"token punctuation\">.</span>CustomInterceptor$Builder</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">-- 指定拦截器的类型 = 自定义拦截器中 builder 的实现类的全类名</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">-- 指定 channel 的选择器</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> multiplexing  <span class=\"token comment\">-- 定义 channel 的选择器类型</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span>header <span class=\"token operator\">=</span> <span class=\"token keyword\">type</span>  <span class=\"token comment\">-- 自定义拦截器的 header 的 k</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span>mapping<span class=\"token punctuation\">.</span>letter <span class=\"token operator\">=</span> c1 <span class=\"token comment\">-- letter 是 map 中一个 value 值，相同的 letter 进入一个 channel 中</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span>mapping<span class=\"token punctuation\">.</span>number <span class=\"token operator\">=</span> c2 <span class=\"token comment\">-- number 是 map 中一个 value 值，相同的 number 进入一个 channel 中</span></pre></td></tr></table></figure><h4 id=\"125-channel\"><a class=\"anchor\" href=\"#125-channel\">#</a> 1.2.5 channel</h4>\n<p>情况 1： memory</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Describe the channel</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> memory</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>capacity <span class=\"token operator\">=</span> <span class=\"token number\">1000</span> <span class=\"token comment\">-- 表示 channel 总容量为 1000 个 event</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>transactionCapacity <span class=\"token operator\">=</span> <span class=\"token number\">100</span> <span class=\"token comment\">-- 表示 channel 传输时收集到的 100 条 event</span></pre></td></tr></table></figure><p>情况 2 ： flie</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span><span class=\"token operator\">=</span><span class=\"token keyword\">file</span>  <span class=\"token comment\">--channel 类型</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>checkpointDir<span class=\"token operator\">=</span><span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>flume<span class=\"token operator\">/</span><span class=\"token keyword\">checkpoint</span><span class=\"token operator\">/</span>behavior1 <span class=\"token comment\">--checkpoint 文件存储的地址</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>dataDirs<span class=\"token operator\">=</span><span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>flume<span class=\"token operator\">/</span><span class=\"token keyword\">data</span><span class=\"token operator\">/</span>behavior1<span class=\"token operator\">/</span>  <span class=\"token comment\">-- channel 中 event 文件在磁盘中存储的地址</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>capacity<span class=\"token operator\">=</span><span class=\"token number\">1000000</span> <span class=\"token comment\">--checkpoint 个数的最大容量</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>maxFileSize<span class=\"token operator\">=</span><span class=\"token number\">2146435071</span> <span class=\"token comment\">-- 一个 event 文件存储的最大的大小</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>keep<span class=\"token operator\">-</span>alive<span class=\"token operator\">=</span><span class=\"token number\">6</span> <span class=\"token comment\">-- 当 put 事务将数据提交到 channel 队列中，channel 队列没有足够的空间时，提交事务等待的最大时间</span></pre></td></tr></table></figure><h4 id=\"126-sinkprocessor\"><a class=\"anchor\" href=\"#126-sinkprocessor\">#</a> 1.2.6 sinkprocessor</h4>\n<p>情况 1：DefaultSinkProcessor -- 对应单个 Sink</p>\n<pre><code>不用写任何配置信息，默认值。\n</code></pre>\n<p>情况 2：FailoverSinkProcessor -- 对应的是 Sink Group</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinkgroups<span class=\"token punctuation\">.</span>g1<span class=\"token punctuation\">.</span>processor<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> failover <span class=\"token comment\">-- 指定类型</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinkgroups<span class=\"token punctuation\">.</span>g1<span class=\"token punctuation\">.</span>processor<span class=\"token punctuation\">.</span>priority<span class=\"token punctuation\">.</span>k1 <span class=\"token operator\">=</span> <span class=\"token number\">5</span> <span class=\"token comment\">-- 设置 K1 的 sink 的优先级</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinkgroups<span class=\"token punctuation\">.</span>g1<span class=\"token punctuation\">.</span>processor<span class=\"token punctuation\">.</span>priority<span class=\"token punctuation\">.</span>k2 <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token comment\">-- 设置 K2 的 sink 的优先级</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinkgroups<span class=\"token punctuation\">.</span>g1<span class=\"token punctuation\">.</span>processor<span class=\"token punctuation\">.</span>maxpenalty <span class=\"token operator\">=</span> <span class=\"token number\">10000</span> <span class=\"token comment\">-- 设置故障的转换时间 10s。默认值为 30s</span></pre></td></tr></table></figure><p>情况 3：LoadBalancingSinkProcessor -- 对应的是 Sink Group</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinkgroups<span class=\"token punctuation\">.</span>g1<span class=\"token punctuation\">.</span>processor<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span>load_balance <span class=\"token comment\">-- 指定类型</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinkgroups<span class=\"token punctuation\">.</span>g1<span class=\"token punctuation\">.</span>processor<span class=\"token punctuation\">.</span>backoff <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">-- 暂不讨论</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinkgroups<span class=\"token punctuation\">.</span>g1<span class=\"token punctuation\">.</span>processor<span class=\"token punctuation\">.</span>selector <span class=\"token operator\">=</span>round_robin <span class=\"token comment\">-- 暂不讨论</span></pre></td></tr></table></figure><h4 id=\"127-sink\"><a class=\"anchor\" href=\"#127-sink\">#</a> 1.2.7 sink</h4>\n<p>情况 1：avro</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Describe the sink</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> avro</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hostname <span class=\"token operator\">=</span> hadoop104 <span class=\"token comment\">-- hosaname</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> <span class=\"token number\">4141</span>  <span class=\"token comment\">-- 端口</span></pre></td></tr></table></figure><p>情况 2：hdfs</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> hdfs</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>path <span class=\"token operator\">=</span> hdfs:<span class=\"token comment\">//hadoop102:9820/flume/upload2/% Y% m% d/% H   -- 上传到 HDFS 的路径</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#上传文件的前缀</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>filePrefix <span class=\"token operator\">=</span> upload<span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#是否按照时间滚动文件夹</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>round <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#多少时间单位创建一个新的文件夹</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>roundValue <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#重新定义时间单位</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>roundUnit <span class=\"token operator\">=</span> <span class=\"token keyword\">hour</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#是否使用本地时间戳</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>useLocalTimeStamp <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#积攒多少个 Event 才 flush 到 HDFS 一次</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>batchSize <span class=\"token operator\">=</span> <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#设置文件类型，可支持压缩</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>fileType <span class=\"token operator\">=</span> DataStream</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">#多久生成一个新的文件</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>rollInterval <span class=\"token operator\">=</span> <span class=\"token number\">60</span>  <span class=\"token comment\">-- 单位是秒</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">#设置每个文件的滚动大小大概是 128M</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>rollSize <span class=\"token operator\">=</span> <span class=\"token number\">134217700</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">#文件的滚动与 Event 数量无关</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>hdfs<span class=\"token punctuation\">.</span>rollCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr></table></figure><p>情况 3：fill_roll</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Describe the sink</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> file_roll</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>sink<span class=\"token punctuation\">.</span>directory <span class=\"token operator\">=</span> <span class=\"token operator\">/</span>opt<span class=\"token operator\">/</span>module<span class=\"token operator\">/</span>flume<span class=\"token operator\">/</span>datas<span class=\"token operator\">/</span>flume3 <span class=\"token comment\">-- 指定上传到本地的路径</span></pre></td></tr></table></figure><p>情况 4：logger</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Describe the sink</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> logger</pre></td></tr></table></figure><p>情况 5：hbase       --- 暂时不讨论</p>\n<h4 id=\"128-连接source-channel-sink\"><a class=\"anchor\" href=\"#128-连接source-channel-sink\">#</a> 1.2.8 连接 source、channel、sink</h4>\n<p>情况 1：source、channel、sink 各一个、</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> c1</pre></td></tr></table></figure><p>情况 2：source 一个、channel 一个、sink 多个</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Bind the source and sink to the channel</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinkgroups<span class=\"token punctuation\">.</span>g1<span class=\"token punctuation\">.</span>sinks <span class=\"token operator\">=</span> k1 k2</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k2<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> c1</pre></td></tr></table></figure><p>情况 3：source 一个、channel 多个、sink 多个</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Bind the source and sink to the channel</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>channels <span class=\"token operator\">=</span> c1 c2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> c1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k2<span class=\"token punctuation\">.</span>channel <span class=\"token operator\">=</span> c2 <span class=\"token comment\">-- 特别注意 channel 没有 “s”</span></pre></td></tr></table></figure><h4 id=\"129-端口和ip的区别\"><a class=\"anchor\" href=\"#129-端口和ip的区别\">#</a> 1.2.9 端口和 ip 的区别</h4>\n<ul>\n<li>sink 端：向指定 ip 地址的端口发送数据</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>端口：</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ip（hostname）：</pre></td></tr></table></figure><ul>\n<li>source 端：监视指定端口并接收指定 ip 发送来的数据</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>端口：该端口只能是自己机器的端口</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ip（hostname）：指能够接受来自此ip的数据</pre></td></tr></table></figure><h3 id=\"13-连接flume\"><a class=\"anchor\" href=\"#13-连接flume\">#</a> 1.3 连接 flume</h3>\n<h4 id=\"131-查看指定ip的通信端口\"><a class=\"anchor\" href=\"#131-查看指定ip的通信端口\">#</a> 1.3.1 查看指定 ip 的通信端口</h4>\n<pre><code>sudo netstat -ntlp | grep 端口号\n</code></pre>\n<h4 id=\"132-关闭端口\"><a class=\"anchor\" href=\"#132-关闭端口\">#</a> 1.3.2 关闭端口</h4>\n<pre><code>sudo kill 端口的进程号\n</code></pre>\n<h4 id=\"133-连接指定ip地址的指定端口\"><a class=\"anchor\" href=\"#133-连接指定ip地址的指定端口\">#</a> 1.3.3 连接指定 ip 地址的指定端口</h4>\n<pre><code>nc ip 端口号\n</code></pre>\n<h4 id=\"134-启动flume\"><a class=\"anchor\" href=\"#134-启动flume\">#</a> 1.3.4  启动 flume</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>bin<span class=\"token operator\">/</span>flume<span class=\"token operator\">-</span>ng agent <span class=\"token operator\">-</span>n <span class=\"token punctuation\">[</span>agent name<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span>c conf <span class=\"token operator\">-</span>f <span class=\"token punctuation\">[</span>自定义flume配置文件<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span>Dflume<span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">.</span>logger<span class=\"token operator\">=</span>INFO<span class=\"token punctuation\">,</span>console</pre></td></tr></table></figure><h2 id=\"二-自定义interceptorsource-sink\"><a class=\"anchor\" href=\"#二-自定义interceptorsource-sink\">#</a> 二、自定义 interceptor，source、 sink</h2>\n<h3 id=\"21-自定义intercepor\"><a class=\"anchor\" href=\"#21-自定义intercepor\">#</a> 2.1 自定义 intercepor</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">flume_interceptor</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flume<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Context</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flume<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Event</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flume<span class=\"token punctuation\">.</span>interceptor<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Interceptor</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * @author lianzhipeng</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @Description</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @create 2020-05-05 10:45</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyInterceptor</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Interceptor</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>     * Description: 初始化方法，新建 Interceptor 时使用</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>     * @Author: lianzhipeng</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>     * @Date: 2020/5/5 10:45</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>     * @return: void</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>     * Description: 更改方法，对 event 进行处理</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>     * @param event 传入的数据</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>     * @Author: lianzhipeng</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>     * @Date: 2020/5/5 10:47</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>     * @return: org.apache.flume.Event 返回处理好的数据</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Event</span> <span class=\"token function\">intercept</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Event</span> event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token comment\">// 获取 event 的 header</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> headers <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getHeaders</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token comment\">// 获取 event 的 body</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> body <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token comment\">// 处理数据</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token class-name\">String</span> string <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">char</span> c <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">>=</span> <span class=\"token string\">'a'</span> <span class=\"token operator\">&amp;&amp;</span> c <span class=\"token operator\">&lt;=</span> <span class=\"token string\">'z'</span> <span class=\"token operator\">||</span> c <span class=\"token operator\">>=</span> <span class=\"token string\">'A'</span> <span class=\"token operator\">&amp;&amp;</span> c <span class=\"token operator\">&lt;=</span> <span class=\"token string\">'Z'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            headers<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"char\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            headers<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"not-char\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token comment\">// 返回数据</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token keyword\">return</span> event<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Event</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">intercept</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Event</span><span class=\"token punctuation\">></span></span> list<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Event</span> event <span class=\"token operator\">:</span> list<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            <span class=\"token function\">intercept</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token keyword\">return</span> list<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>     * 框架会调用 MyBulider 来创建自定义拦截器实例</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyBulider</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Builder</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>         * Description: 创建自定义拦截器实例的方法</pre></td></tr><tr><td data-num=\"85\"></td><td><pre>         *</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>         * @Author: lianzhipeng</pre></td></tr><tr><td data-num=\"87\"></td><td><pre>         * @Date: 2020/5/5 10:54</pre></td></tr><tr><td data-num=\"88\"></td><td><pre>         * @return: org.apache.flume.interceptor.Interceptor</pre></td></tr><tr><td data-num=\"89\"></td><td><pre>         */</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Interceptor</span> <span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>         * Description: 读取配置信息</pre></td></tr><tr><td data-num=\"96\"></td><td><pre>         *</pre></td></tr><tr><td data-num=\"97\"></td><td><pre>         * @param context</pre></td></tr><tr><td data-num=\"98\"></td><td><pre>         * @Author: lianzhipeng</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>         * @Date: 2020/5/5 10:54</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>         * @return: void</pre></td></tr><tr><td data-num=\"101\"></td><td><pre>         */</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Context</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"22-自定义source\"><a class=\"anchor\" href=\"#22-自定义source\">#</a> 2.2 自定义 source</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">flume_interceptor</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flume<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Context</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flume<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Event</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flume<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">EventDeliveryException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flume<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PollableSource</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flume<span class=\"token punctuation\">.</span>channel<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ChannelProcessor</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flume<span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configurable</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flume<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SimpleEvent</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flume<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AbstractSource</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @author lianzhipeng</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * @Description</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> * @create 2020-05-05 14:31</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MySource</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractSource</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Configurable</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">PollableSource</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> prefix<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Long</span> interval<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>     * Description: 拉取事件并交给 ChannelProcessor 处理的方法</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>     * @Author: lianzhipeng</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>     * @Date: 2020/5/5 14:33</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>     * @return: org.apache.flume.PollableSource.Status</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Status</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">EventDeliveryException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token class-name\">Status</span> status <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token comment\">// 通过外部方法拉取数据</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token class-name\">Event</span> e <span class=\"token operator\">=</span> <span class=\"token function\">getSomeData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token comment\">// Store the Event into this Source's associated Channel(s)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token class-name\">ChannelProcessor</span> channelProcessor <span class=\"token operator\">=</span> <span class=\"token function\">getChannelProcessor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            channelProcessor<span class=\"token punctuation\">.</span><span class=\"token function\">processEvent</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            status <span class=\"token operator\">=</span> <span class=\"token class-name\">Status</span><span class=\"token punctuation\">.</span>READY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token comment\">// Log exception, handle individual exceptions as needed</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            status <span class=\"token operator\">=</span> <span class=\"token class-name\">Status</span><span class=\"token punctuation\">.</span>BACKOFF<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token comment\">// re-throw all Errors</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                <span class=\"token keyword\">throw</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Error</span><span class=\"token punctuation\">)</span>t<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>     * Description: 拉取数据并包装成 event 的过程</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>     * @Author: lianzhipeng</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>     * @Date: 2020/5/5 14:55</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>     * @return: org.apache.flume.Event 拉取到的数据</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Event</span> <span class=\"token function\">getSomeData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token comment\">// 添加前缀</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token class-name\">String</span> message <span class=\"token operator\">=</span> prefix <span class=\"token operator\">+</span> i <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span>interval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token class-name\">SimpleEvent</span> event <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        event<span class=\"token punctuation\">.</span><span class=\"token function\">setBody</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token keyword\">return</span>  event<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>     * Description: 如果拉取不到数据，backoff 时间的增长速度</pre></td></tr><tr><td data-num=\"81\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>     * @Author: lianzhipeng</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>     * @Date: 2020/5/5 14:34</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>     * @return: long 增长量</pre></td></tr><tr><td data-num=\"85\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">long</span> <span class=\"token function\">getBackOffSleepIncrement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"91\"></td><td><pre>     * Description: 最大的等待时间</pre></td></tr><tr><td data-num=\"92\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"93\"></td><td><pre>     * @Author: lianzhipeng</pre></td></tr><tr><td data-num=\"94\"></td><td><pre>     * @Date: 2020/5/5 14:38</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>     * @return: long</pre></td></tr><tr><td data-num=\"96\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">long</span> <span class=\"token function\">getMaxBackOffSleepInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"102\"></td><td><pre>     * Description: 配置参数，来自于 configurable，可以定义我们自己定义的 source</pre></td></tr><tr><td data-num=\"103\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"104\"></td><td><pre>     * @param context 配置文件</pre></td></tr><tr><td data-num=\"105\"></td><td><pre>     * @Author: lianzhipeng</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>     * @Date: 2020/5/5 14:39</pre></td></tr><tr><td data-num=\"107\"></td><td><pre>     * @return: void</pre></td></tr><tr><td data-num=\"108\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Context</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        prefix <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"prefff\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"xxxx\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        interval <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getLong</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"interval\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">500L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"23-自定义sink\"><a class=\"anchor\" href=\"#23-自定义sink\">#</a> 2.3 自定义 sink</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">flume_interceptor</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flume<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flume<span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configurable</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flume<span class=\"token punctuation\">.</span>sink<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AbstractSink</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * @author lianzhipeng</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * @Description</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @create 2020-05-05 14:31</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MySiink</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractSink</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Configurable</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>     * Description: 改方法调用时，会从 Channel 中拉取数据并处理</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>     * @Author: lianzhipeng</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>     * @Date: 2020/5/5 15:09</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>     * @return: org.apache.flume.Sink.Status 处理的状态</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Status</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">EventDeliveryException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">Status</span> status <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\">// Start transaction</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">// 获取 channel</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token class-name\">Channel</span> ch <span class=\"token operator\">=</span> <span class=\"token function\">getChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">// 拉取数据的事务</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token class-name\">Transaction</span> txn <span class=\"token operator\">=</span> ch<span class=\"token punctuation\">.</span><span class=\"token function\">getTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token comment\">// 开始拉取</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        txn<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token comment\">// This try clause includes whatever Channel operations you want to do</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token comment\">// 拉取的数据，如果拉取不到，则返回 null</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token class-name\">Event</span> event<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token comment\">// 如果拉取的数据为 null，则等 0.1 秒后继续拉取数据，知道拉取数据</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">=</span> ch<span class=\"token punctuation\">.</span><span class=\"token function\">take</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token comment\">// Send the Event to the external repository.</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token comment\">// 如果拉取到了数据，将数据进行处理</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token function\">storeSomeData</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            txn<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            status <span class=\"token operator\">=</span> <span class=\"token class-name\">Status</span><span class=\"token punctuation\">.</span>READY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            txn<span class=\"token punctuation\">.</span><span class=\"token function\">rollback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token comment\">// Log exception, handle individual exceptions as needed</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            status <span class=\"token operator\">=</span> <span class=\"token class-name\">Status</span><span class=\"token punctuation\">.</span>BACKOFF<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token comment\">// re-throw all Errors</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                <span class=\"token keyword\">throw</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Error</span><span class=\"token punctuation\">)</span> t<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token comment\">// 拉取事务的关闭</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            txn<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">storeSomeData</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Event</span> event<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token comment\">// 获取 event 的 body 数据</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> body <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token comment\">// 将数据写出到控制台</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Context</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"三-kafka与flume的结合\"><a class=\"anchor\" href=\"#三-kafka与flume的结合\">#</a> 三、kafka 与 flume 的结合</h2>\n<p>kafka：数据的中转站，主要功能由 topic 体现；</p>\n<p>flume：数据的采集，通过 source 和 sink 体现。</p>\n<h3 id=\"31-kafka-source\"><a class=\"anchor\" href=\"#31-kafka-source\">#</a> 3.1 kafka source</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 问题 ：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>fulme在kafka中的作用</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">-- 答案：</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>消费者</pre></td></tr></table></figure><p>配置文件：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flume<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>KafkaSource <span class=\"token comment\">--source 类型</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>bootstrap<span class=\"token punctuation\">.</span>servers <span class=\"token operator\">=</span> hadoop105:<span class=\"token number\">9092</span><span class=\"token punctuation\">,</span>hadoop106:<span class=\"token number\">9092</span> <span class=\"token comment\">-- kafka 的集群</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>topics<span class=\"token operator\">=</span>topic_log <span class=\"token comment\">-- 订阅的话题</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>batchSize<span class=\"token operator\">=</span><span class=\"token number\">6000</span> <span class=\"token comment\">--putlist 中数据达到了 6K 以后提交到 channel 中</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">.</span>r1<span class=\"token punctuation\">.</span>batchDurationMillis<span class=\"token operator\">=</span><span class=\"token number\">2000</span> <span class=\"token comment\">-- 拉取数据的时间达到 2s 以后，将获取的数据提交到 channel 中</span></pre></td></tr></table></figure><h3 id=\"32-kakfa-channel\"><a class=\"anchor\" href=\"#32-kakfa-channel\">#</a> 3.2 kakfa channel</h3>\n<ul>\n<li>kakfa channel 这种情况使用的最多，此时的 flume 可以是消费者、生产者、source 和 sink 之间的缓冲区（具有高吞吐量的优势），Channel 是位于 Source 和 Sink 之间的缓冲区。</li>\n<li>一共有三种情况，分别是:</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">-- 情况一： 有 Flume source and sink -- 缓冲区</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>kakfa channel为事件提供了可靠且高可用的通道；</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">-- 情况二： 有 source and interceptor but no sink -- 生产者</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>it allows writing Flume events <span class=\"token keyword\">into</span> a Kafka topic<span class=\"token punctuation\">,</span> <span class=\"token keyword\">for</span> <span class=\"token keyword\">use</span> <span class=\"token keyword\">by</span> other app</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">-- 情况三： 有 sink, but no source -- 消费者</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>it <span class=\"token operator\">is</span> a low<span class=\"token operator\">-</span>latency<span class=\"token punctuation\">,</span> fault tolerant way <span class=\"token keyword\">to</span> send events <span class=\"token keyword\">from</span> Kafka <span class=\"token keyword\">to</span> Flume sinks such <span class=\"token keyword\">as</span> HDFS<span class=\"token punctuation\">,</span> HBase <span class=\"token operator\">or</span> Solr</pre></td></tr></table></figure><p>配置文件：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flume<span class=\"token punctuation\">.</span>channel<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>KafkaChannel <span class=\"token comment\">----channel 类型</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>bootstrap<span class=\"token punctuation\">.</span>servers <span class=\"token operator\">=</span> hadoop105:<span class=\"token number\">9092</span><span class=\"token punctuation\">,</span>hadoop106:<span class=\"token number\">9092</span><span class=\"token punctuation\">,</span>hadoop107:<span class=\"token number\">9092</span> <span class=\"token comment\">--kafka 集群</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>topic <span class=\"token operator\">=</span>topic_log <span class=\"token comment\">-- 话题</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span>parseAsFlumeEvent<span class=\"token operator\">=</span><span class=\"token boolean\">false</span> <span class=\"token comment\">-- 不需要 event 的 header 数据</span></pre></td></tr></table></figure><h3 id=\"33-kafka-sink\"><a class=\"anchor\" href=\"#33-kafka-sink\">#</a> 3.3 kafka sink</h3>\n<p>作用：将数据拉取到 kafka 的 topic 中。</p>\n<p>配置文件：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>flume<span class=\"token punctuation\">.</span>sink<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>KafkaSink <span class=\"token comment\">--sink 类型</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>topic <span class=\"token operator\">=</span>topic_log <span class=\"token comment\">-- 话题</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>bootstrap<span class=\"token punctuation\">.</span>servers <span class=\"token operator\">=</span> hadoop105:<span class=\"token number\">9092</span><span class=\"token punctuation\">,</span>hadoop106:<span class=\"token number\">9092</span><span class=\"token punctuation\">,</span>hadoop107:<span class=\"token number\">9092</span> <span class=\"token comment\">--kafka 集群</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>flumeBatchSize <span class=\"token operator\">=</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>producer<span class=\"token punctuation\">.</span>acks <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token comment\">-- 副本策略</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>producer<span class=\"token punctuation\">.</span>linger<span class=\"token punctuation\">.</span>ms <span class=\"token operator\">=</span> <span class=\"token number\">1</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a1<span class=\"token punctuation\">.</span>sinks<span class=\"token punctuation\">.</span>k1<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>producer<span class=\"token punctuation\">.</span>compression<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> snappy  <span class=\"token comment\">-- 压缩格式</span></pre></td></tr></table></figure>",
            "tags": [
                "大数据",
                "Flume"
            ]
        }
    ]
}